2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_setup.py:_flush():76] Configure stats pid to 63813
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/.config/wandb/settings
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/settings
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_init.py:_log_setup():524] Logging user logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240315_162908-vm78rhdz/logs/debug.log
2024-03-15 16:29:08,605 INFO    MainThread:63813 [wandb_init.py:_log_setup():525] Logging internal logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240315_162908-vm78rhdz/logs/debug-internal.log
2024-03-15 16:29:08,606 INFO    MainThread:63813 [wandb_init.py:init():564] calling init triggers
2024-03-15 16:29:08,606 INFO    MainThread:63813 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'max_action': array([4., 2., 2.]), 'step_penalty': 1, 'final_reward': 10, 'max_steps': 10, 'sensor_offset_x_range_len': 2.0, 'sensor_offset_z_range_len': 2.0, 'key_x_max_offset': 10, 'key_y_max_offset': 0, 'key_z_max_offset': 0, 'normalize': False, 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1]}, 'policy': {'buffer_size': 2000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 64, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=1), 'batch_size': 32, 'learning_rate': 0.0003, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_relative_motion': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/long_open_lock_2024-03-15_16-28-59.957'}, 'train': {'total_timesteps': 100000, 'log_interval': 10, 'checkpoint_every': 2000, 'eval_freq': 200, 'n_eval': 30, 'parallel': 1, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': 'long_open_lock', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/long_open_lock_sac.yaml', 'no_render': False}
2024-03-15 16:29:08,606 INFO    MainThread:63813 [wandb_init.py:init():614] starting backend
2024-03-15 16:29:08,606 INFO    MainThread:63813 [wandb_init.py:init():618] setting up manager
2024-03-15 16:29:08,607 INFO    MainThread:63813 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-15 16:29:08,613 INFO    MainThread:63813 [wandb_init.py:init():624] backend started and connected
2024-03-15 16:29:08,615 INFO    MainThread:63813 [wandb_init.py:init():716] updated telemetry
2024-03-15 16:29:08,623 INFO    MainThread:63813 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-15 16:29:09,621 INFO    MainThread:63813 [wandb_run.py:_on_init():2254] communicating current version
2024-03-15 16:29:09,949 INFO    MainThread:63813 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-15 16:29:09,949 INFO    MainThread:63813 [wandb_init.py:init():800] starting run threads in backend
2024-03-15 16:29:10,129 INFO    MainThread:63813 [wandb_run.py:_console_start():2233] atexit reg
2024-03-15 16:29:10,129 INFO    MainThread:63813 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-15 16:29:10,129 INFO    MainThread:63813 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-15 16:29:10,129 INFO    MainThread:63813 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-15 16:29:10,130 INFO    MainThread:63813 [wandb_init.py:init():841] run started, returning control to user process
2024-03-15 16:29:11,660 INFO    MainThread:63813 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/long_open_lock_2024-03-15_16-28-59.957/SAC_1, True
2024-03-15 16:29:11,674 INFO    MainThread:63813 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForLongOpenLockPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_relative_motion': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 100000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=1)', 'start_time': 1710491350130691410, 'learning_rate': 0.0003, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/long_open_lock_2024-03-15_16-28-59.957', '_last_obs': "OrderedDict([('key1', array([[ 7.8782907e+00, -3.8663158e-03, -1.7228922e-01]], dtype=float32)), ('key2', array([[ 7.8781052e+00, -4.1940482e-03, -1.7225793e-01]], dtype=float32)), ('key_side_pts', array([[[ 0.05239038, -0.00300828,  0.02113483],\n        [ 0.05238976,  0.00298267,  0.02114145],\n        [ 0.05239024, -0.00299731,  0.01113405],\n        [ 0.05238963,  0.00299365,  0.01114066]]], dtype=float32)), ('lock1_pts', array([[[ 0.031, -0.004,  0.03 ],\n        [ 0.031,  0.004,  0.03 ],\n        [ 0.039,  0.004,  0.03 ],\n        [ 0.039, -0.004,  0.03 ]]], dtype=float32)), ('lock2_pts', array([[[ 0.023, -0.004,  0.03 ],\n        [ 0.023,  0.004,  0.03 ],\n        [ 0.015, -0.004,  0.03 ],\n        [ 0.015,  0.004,  0.03 ]]], dtype=float32)), ('lock_side_pts', array([[[ 0.046,  0.02 ,  0.04 ],\n        [ 0.046,  0.02 ,  0.   ],\n        [ 0.046, -0.02 ,  0.04 ],\n        [ 0.046, -0.02 ,  0.   ]]], dtype=float32)), ('marker_flow', array([[[[[ 12.820672,  20.744637],\n          [ 44.0196  ,  21.510172],\n          [ 74.94205 ,  22.983742],\n          ...,\n          [293.4455  , 223.67299 ],\n          [293.4455  , 223.67299 ],\n          [293.4455  , 223.67299 ]],\n\n         [[ 11.877585,  20.526987],\n          [ 44.281197,  22.068132],\n          [ 75.42934 ,  22.156097],\n          ...,\n          [293.8116  , 224.2557  ],\n          [293.8116  , 224.2557  ],\n          [293.8116  , 224.2557  ]]],\n\n\n        [[[ 23.170612,  26.080994],\n          [ 56.75717 ,  26.268421],\n          [ 89.760284,  24.621296],\n          ...,\n          [290.06143 , 225.8454  ],\n          [290.06143 , 225.8454  ],\n          [290.06143 , 225.8454  ]],\n\n         [[ 23.465353,  26.5539  ],\n          [ 57.352818,  27.188276],\n          [ 88.52058 ,  25.21442 ],\n          ...,\n          [290.19562 , 225.50562 ],\n          [290.19562 , 225.50562 ],\n          [290.19562 , 225.50562 ]]]]], dtype=float32)), ('relative_motion', array([[0., 0., 0.]], dtype=float32)), ('rgb_images', array([[[[[57, 69, 33],\n          [63, 70, 37],\n          [60, 69, 35],\n          ...,\n          [63, 89, 35],\n          [64, 91, 35],\n          [60, 86, 36]],\n\n         [[57, 69, 41],\n          [60, 71, 31],\n          [58, 69, 37],\n          ...,\n          [62, 89, 35],\n          [62, 89, 33],\n          [66, 90, 36]],\n\n         [[59, 70, 38],\n          [61, 71, 34],\n          [61, 69, 36],\n          ...,\n          [64, 90, 36],\n          [64, 88, 34],\n          [61, 88, 38]],\n\n         ...,\n\n         [[92, 72, 16],\n          [81, 73, 18],\n          [89, 72, 16],\n          ...,\n          [83, 93, 27],\n          [84, 95, 18],\n          [84, 94, 24]],\n\n         [[86, 73, 17],\n          [83, 72, 15],\n          [88, 72, 18],\n          ...,\n          [87, 94, 23],\n          [79, 95, 27],\n          [84, 95, 26]],\n\n         [[87, 73, 17],\n          [86, 73, 17],\n          [83, 70, 13],\n          ...,\n          [85, 93, 20],\n          [87, 92, 25],\n          [83, 94, 26]]],\n\n\n        [[[57, 69, 33],\n          [63, 70, 37],\n          [60, 69, 35],\n          ...,\n          [63, 89, 35],\n          [64, 91, 35],\n          [60, 86, 36]],\n\n         [[57, 69, 41],\n          [60, 71, 31],\n          [58, 69, 37],\n          ...,\n          [62, 89, 35],\n          [62, 89, 33],\n          [66, 90, 36]],\n\n         [[59, 70, 38],\n          [61, 71, 34],\n          [61, 69, 36],\n          ...,\n          [64, 90, 36],\n          [64, 88, 34],\n          [61, 88, 38]],\n\n         ...,\n\n         [[92, 72, 16],\n          [81, 73, 18],\n          [89, 72, 16],\n          ...,\n          [83, 93, 27],\n          [84, 95, 18],\n          [84, 94, 24]],\n\n         [[86, 73, 17],\n          [83, 72, 15],\n          [88, 72, 18],\n          ...,\n          [87, 94, 23],\n          [79, 95, 27],\n          [84, 95, 26]],\n\n         [[87, 73, 17],\n          [86, 73, 17],\n          [83, 70, 13],\n          ...,\n          [85, 93, 20],\n          [87, 92, 25],\n          [83, 94, 26]]]]], dtype=uint8))])", '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('key1': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'key2': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'key_side_pts': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32), 'lock1_pts': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32), 'lock2_pts': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32), 'lock_side_pts': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32), 'relative_motion': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'rgb_images': Box(0, 255, (2, 240, 320, 3), uint8))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 1, 'buffer_size': 2000, 'batch_size': 32, 'learning_starts': 64, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7fa2bdc350c0>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7fa2d6e8a710>', 'actor': 'Actor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=67, out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=256, bias=True)\n    (7): Tanh()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractorForLongOpenLock()\n  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractorForLongOpenLock()\n  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7fa2bdd19780>'}
