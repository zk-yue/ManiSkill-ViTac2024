wandb_version: 1

env:
  desc: null
  value:
    max_action:
    - 4.0
    - 2.0
    - 2.0
    step_penalty: 1
    final_reward: 10
    max_steps: 10
    sensor_offset_x_range_len: 2.0
    sensor_offset_z_range_len: 2.0
    key_x_max_offset: 10
    key_y_max_offset: 0
    key_z_max_offset: 0
    normalize: false
    marker_random_noise: 0.5
    marker_lose_tracking_probability: 0.01
    marker_interval_range:
    - 1.95
    - 2.15
    marker_rotation_range: 0.1
    marker_translation_range:
    - 1
    - 1
    marker_pos_shift_range:
    - 0.1
    - 0.1
policy:
  desc: null
  value:
    buffer_size: 2000
    train_freq: 2
    gradient_steps: -1
    learning_starts: 64
    action_noise: VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5
      0.5])), n_envs=1)
    batch_size: 32
    learning_rate: 0.0003
    optimize_memory_usage: false
    ent_coef: auto
    target_update_interval: 1
    target_entropy: auto
    use_sde: false
    sde_sample_freq: -1
    use_sde_at_warmup: false
    policy_kwargs:
      pointnet_in_dim: 4
      pointnet_out_dim: 32
      pointnet_batchnorm: false
      pointnet_layernorm: true
      zero_init_output: true
      use_relative_motion: true
      use_sde: false
    device: cuda:0
    seed: 0
    tensorboard_log: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/long_open_lock_2024-03-15_16-28-59.957
train:
  desc: null
  value:
    total_timesteps: 100000
    log_interval: 10
    checkpoint_every: 2000
    eval_freq: 200
    n_eval: 30
    parallel: 1
    seed: 0
    device: cuda:0
    gpu: 0
    name: long_open_lock
    wandb_name: ManiSkill_ViTac
    emp: {}
cfg:
  desc: null
  value: configs/parameters/long_open_lock_sac.yaml
no_render:
  desc: null
  value: false
_wandb:
  desc: null
  value:
    code_path: code/scripts/train_sac.py
    python_version: 3.10.0
    cli_version: 0.16.0
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    start_time: 1710491348.613563
    t:
      1:
      - 1
      - 5
      - 53
      - 55
      2:
      - 1
      - 5
      - 53
      - 55
      3:
      - 13
      - 16
      - 22
      - 23
      - 35
      4: 3.10.0
      5: 0.16.0
      8:
      - 5
      13: linux-x86_64
algo:
  desc: null
  value: SAC
policy_class:
  desc: null
  value: <class 'solutions.policies_sac.SACPolicyForLongOpenLockPointFlowEnv'>
device:
  desc: null
  value: cuda:0
verbose:
  desc: null
  value: 1
policy_kwargs:
  desc: null
  value: '{''pointnet_in_dim'': 4, ''pointnet_out_dim'': 32, ''pointnet_batchnorm'':
    False, ''pointnet_layernorm'': True, ''zero_init_output'': True, ''use_relative_motion'':
    True, ''use_sde'': False}'
num_timesteps:
  desc: null
  value: 0
_total_timesteps:
  desc: null
  value: 100000
_num_timesteps_at_start:
  desc: null
  value: 0
seed:
  desc: null
  value: 0
action_noise:
  desc: null
  value: VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=1)
start_time:
  desc: null
  value: 1710491350130691410
learning_rate:
  desc: null
  value: 0.0003
tensorboard_log:
  desc: null
  value: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/long_open_lock_2024-03-15_16-28-59.957
_last_obs:
  desc: null
  value: "OrderedDict([('key1', array([[ 7.8782907e+00, -3.8663158e-03, -1.7228922e-01]],\
    \ dtype=float32)), ('key2', array([[ 7.8781052e+00, -4.1940482e-03, -1.7225793e-01]],\
    \ dtype=float32)), ('key_side_pts', array([[[ 0.05239038, -0.00300828,  0.02113483],\n\
    \        [ 0.05238976,  0.00298267,  0.02114145],\n        [ 0.05239024, -0.00299731,\
    \  0.01113405],\n        [ 0.05238963,  0.00299365,  0.01114066]]], dtype=float32)),\
    \ ('lock1_pts', array([[[ 0.031, -0.004,  0.03 ],\n        [ 0.031,  0.004,  0.03\
    \ ],\n        [ 0.039,  0.004,  0.03 ],\n        [ 0.039, -0.004,  0.03 ]]], dtype=float32)),\
    \ ('lock2_pts', array([[[ 0.023, -0.004,  0.03 ],\n        [ 0.023,  0.004,  0.03\
    \ ],\n        [ 0.015, -0.004,  0.03 ],\n        [ 0.015,  0.004,  0.03 ]]], dtype=float32)),\
    \ ('lock_side_pts', array([[[ 0.046,  0.02 ,  0.04 ],\n        [ 0.046,  0.02\
    \ ,  0.   ],\n        [ 0.046, -0.02 ,  0.04 ],\n        [ 0.046, -0.02 ,  0.\
    \   ]]], dtype=float32)), ('marker_flow', array([[[[[ 12.820672,  20.744637],\n\
    \          [ 44.0196  ,  21.510172],\n          [ 74.94205 ,  22.983742],\n  \
    \        ...,\n          [293.4455  , 223.67299 ],\n          [293.4455  , 223.67299\
    \ ],\n          [293.4455  , 223.67299 ]],\n\n         [[ 11.877585,  20.526987],\n\
    \          [ 44.281197,  22.068132],\n          [ 75.42934 ,  22.156097],\n  \
    \        ...,\n          [293.8116  , 224.2557  ],\n          [293.8116  , 224.2557\
    \  ],\n          [293.8116  , 224.2557  ]]],\n\n\n        [[[ 23.170612,  26.080994],\n\
    \          [ 56.75717 ,  26.268421],\n          [ 89.760284,  24.621296],\n  \
    \        ...,\n          [290.06143 , 225.8454  ],\n          [290.06143 , 225.8454\
    \  ],\n          [290.06143 , 225.8454  ]],\n\n         [[ 23.465353,  26.5539\
    \  ],\n          [ 57.352818,  27.188276],\n          [ 88.52058 ,  25.21442 ],\n\
    \          ...,\n          [290.19562 , 225.50562 ],\n          [290.19562 , 225.50562\
    \ ],\n          [290.19562 , 225.50562 ]]]]], dtype=float32)), ('relative_motion',\
    \ array([[0., 0., 0.]], dtype=float32)), ('rgb_images', array([[[[[57, 69, 33],\n\
    \          [63, 70, 37],\n          [60, 69, 35],\n          ...,\n          [63,\
    \ 89, 35],\n          [64, 91, 35],\n          [60, 86, 36]],\n\n         [[57,\
    \ 69, 41],\n          [60, 71, 31],\n          [58, 69, 37],\n          ...,\n\
    \          [62, 89, 35],\n          [62, 89, 33],\n          [66, 90, 36]],\n\n\
    \         [[59, 70, 38],\n          [61, 71, 34],\n          [61, 69, 36],\n \
    \         ...,\n          [64, 90, 36],\n          [64, 88, 34],\n          [61,\
    \ 88, 38]],\n\n         ...,\n\n         [[92, 72, 16],\n          [81, 73, 18],\n\
    \          [89, 72, 16],\n          ...,\n          [83, 93, 27],\n          [84,\
    \ 95, 18],\n          [84, 94, 24]],\n\n         [[86, 73, 17],\n          [83,\
    \ 72, 15],\n          [88, 72, 18],\n          ...,\n          [87, 94, 23],\n\
    \          [79, 95, 27],\n          [84, 95, 26]],\n\n         [[87, 73, 17],\n\
    \          [86, 73, 17],\n          [83, 70, 13],\n          ...,\n          [85,\
    \ 93, 20],\n          [87, 92, 25],\n          [83, 94, 26]]],\n\n\n        [[[57,\
    \ 69, 33],\n          [63, 70, 37],\n          [60, 69, 35],\n          ...,\n\
    \          [63, 89, 35],\n          [64, 91, 35],\n          [60, 86, 36]],\n\n\
    \         [[57, 69, 41],\n          [60, 71, 31],\n          [58, 69, 37],\n \
    \         ...,\n          [62, 89, 35],\n          [62, 89, 33],\n          [66,\
    \ 90, 36]],\n\n         [[59, 70, 38],\n          [61, 71, 34],\n          [61,\
    \ 69, 36],\n          ...,\n          [64, 90, 36],\n          [64, 88, 34],\n\
    \          [61, 88, 38]],\n\n         ...,\n\n         [[92, 72, 16],\n      \
    \    [81, 73, 18],\n          [89, 72, 16],\n          ...,\n          [83, 93,\
    \ 27],\n          [84, 95, 18],\n          [84, 94, 24]],\n\n         [[86, 73,\
    \ 17],\n          [83, 72, 15],\n          [88, 72, 18],\n          ...,\n   \
    \       [87, 94, 23],\n          [79, 95, 27],\n          [84, 95, 26]],\n\n \
    \        [[87, 73, 17],\n          [86, 73, 17],\n          [83, 70, 13],\n  \
    \        ...,\n          [85, 93, 20],\n          [87, 92, 25],\n          [83,\
    \ 94, 26]]]]], dtype=uint8))])"
_last_episode_starts:
  desc: null
  value: '[ True]'
_last_original_obs:
  desc: null
  value: None
_episode_num:
  desc: null
  value: 0
use_sde:
  desc: null
  value: 'False'
sde_sample_freq:
  desc: null
  value: -1
_current_progress_remaining:
  desc: null
  value: 1.0
_stats_window_size:
  desc: null
  value: 100
ep_info_buffer:
  desc: null
  value: deque([], maxlen=100)
ep_success_buffer:
  desc: null
  value: deque([], maxlen=100)
_n_updates:
  desc: null
  value: 0
_custom_logger:
  desc: null
  value: 'False'
_vec_normalize_env:
  desc: null
  value: None
observation_space:
  desc: null
  value: 'Dict(''key1'': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), ''key2'':
    Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), ''key_side_pts'': Box(-3.4028235e+38,
    3.4028235e+38, (4, 3), float32), ''lock1_pts'': Box(-3.4028235e+38, 3.4028235e+38,
    (4, 3), float32), ''lock2_pts'': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32),
    ''lock_side_pts'': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32), ''marker_flow'':
    Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32), ''relative_motion'':
    Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), ''rgb_images'': Box(0, 255,
    (2, 240, 320, 3), uint8))'
action_space:
  desc: null
  value: Box(-1.0, 1.0, (3,), float32)
n_envs:
  desc: null
  value: 1
buffer_size:
  desc: null
  value: 2000
batch_size:
  desc: null
  value: 32
learning_starts:
  desc: null
  value: 64
tau:
  desc: null
  value: 0.005
gamma:
  desc: null
  value: 0.99
gradient_steps:
  desc: null
  value: -1
optimize_memory_usage:
  desc: null
  value: 'False'
replay_buffer:
  desc: null
  value: <stable_baselines3.common.buffers.DictReplayBuffer object at 0x7fa2bdc350c0>
replay_buffer_class:
  desc: null
  value: <class 'stable_baselines3.common.buffers.DictReplayBuffer'>
replay_buffer_kwargs:
  desc: null
  value: '{}'
_episode_storage:
  desc: null
  value: None
train_freq:
  desc: null
  value: 'TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde_at_warmup:
  desc: null
  value: 'False'
target_entropy:
  desc: null
  value: -3.0
log_ent_coef:
  desc: null
  value: tensor([0.], device='cuda:0', requires_grad=True)
ent_coef:
  desc: null
  value: auto
target_update_interval:
  desc: null
  value: 1
ent_coef_optimizer:
  desc: null
  value: "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n\
    \    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach:\
    \ None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay:\
    \ 0\n)"
lr_schedule:
  desc: null
  value: <function constant_fn.<locals>.func at 0x7fa2d6e8a710>
actor:
  desc: null
  value: "Actor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n \
    \   (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea):\
    \ Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n   \
    \     (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,),\
    \ stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea):\
    \ PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n\
    \        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,),\
    \ stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,),\
    \ stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n\
    \        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1):\
    \ ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n\
    \      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=67,\
    \ out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n\
    \    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n\
    \    (6): Linear(in_features=256, out_features=256, bias=True)\n    (7): Tanh()\n\
    \  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std):\
    \ Linear(in_features=256, out_features=3, bias=True)\n)"
critic:
  desc: null
  value: "ContinuousCritic(\n  (features_extractor): CriticFeatureExtractorForLongOpenLock()\n\
    \  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n)"
critic_target:
  desc: null
  value: "ContinuousCritic(\n  (features_extractor): CriticFeatureExtractorForLongOpenLock()\n\
    \  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n)"
batch_norm_stats:
  desc: null
  value: '[]'
batch_norm_stats_target:
  desc: null
  value: '[]'
_logger:
  desc: null
  value: <stable_baselines3.common.logger.Logger object at 0x7fa2bdd19780>
