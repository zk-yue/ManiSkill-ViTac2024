2024-03-16 19:07:45,614 INFO    MainThread:1721741 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_setup.py:_flush():76] Configure stats pid to 1721741
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_setup.py:_flush():76] Loading settings from /home/lab/.config/wandb/settings
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_setup.py:_flush():76] Loading settings from /media/lab/data/yzk/ManiSkill-ViTac2024/wandb/settings
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_init.py:_log_setup():524] Logging user logs to /media/lab/data/yzk/ManiSkill-ViTac2024/wandb/run-20240316_190745-yc5ibft5/logs/debug.log
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_init.py:_log_setup():525] Logging internal logs to /media/lab/data/yzk/ManiSkill-ViTac2024/wandb/run-20240316_190745-yc5ibft5/logs/debug-internal.log
2024-03-16 19:07:45,615 INFO    MainThread:1721741 [wandb_init.py:init():564] calling init triggers
2024-03-16 19:07:45,616 INFO    MainThread:1721741 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.0mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 2000, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4), 'batch_size': 128, 'learning_rate': 0.0003, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-16_19-07-41.094'}, 'train': {'total_timesteps': 500000, 'log_interval': 10, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 4, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': '7shape_1.5mm', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_sac.yaml', 'no_render': False}
2024-03-16 19:07:45,616 INFO    MainThread:1721741 [wandb_init.py:init():614] starting backend
2024-03-16 19:07:45,617 INFO    MainThread:1721741 [wandb_init.py:init():618] setting up manager
2024-03-16 19:07:45,623 INFO    MainThread:1721741 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-16 19:07:45,625 INFO    MainThread:1721741 [wandb_init.py:init():624] backend started and connected
2024-03-16 19:07:45,636 INFO    MainThread:1721741 [wandb_init.py:init():716] updated telemetry
2024-03-16 19:07:45,643 INFO    MainThread:1721741 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-16 19:07:47,745 INFO    MainThread:1721741 [wandb_run.py:_on_init():2254] communicating current version
2024-03-16 19:07:48,110 INFO    MainThread:1721741 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-16 19:07:48,110 INFO    MainThread:1721741 [wandb_init.py:init():800] starting run threads in backend
2024-03-16 19:07:51,298 INFO    MainThread:1721741 [wandb_run.py:_console_start():2233] atexit reg
2024-03-16 19:07:51,299 INFO    MainThread:1721741 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-16 19:07:51,299 INFO    MainThread:1721741 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-16 19:07:51,299 INFO    MainThread:1721741 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-16 19:07:51,300 INFO    MainThread:1721741 [wandb_init.py:init():841] run started, returning control to user process
2024-03-16 19:07:54,749 INFO    MainThread:1721741 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /media/lab/data/yzk/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-16_19-07-41.094/SAC_1, True
2024-03-16 19:07:54,768 INFO    MainThread:1721741 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4)', 'start_time': 1710587271301103418, 'learning_rate': 0.0003, 'tensorboard_log': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-16_19-07-41.094', '_last_obs': "OrderedDict([('gt_offset', array([[-0.7323596 ,  2.9123712 ,  1.9184924 ],\n       [-0.07555795, -3.179108  , -8.90545   ],\n       [ 3.835146  ,  3.0408218 ,  4.595649  ],\n       [ 2.5648854 , -3.4659584 ,  4.863401  ]], dtype=float32)), ('marker_flow', array([[[[[224.77692 ,  12.386584],\n          [258.03275 ,  12.926651],\n          [287.6889  ,  16.164322],\n          ...,\n          [307.38217 , 228.27756 ],\n          [307.38217 , 228.27756 ],\n          [307.38217 , 228.27756 ]],\n\n         [[229.33775 ,  12.220298],\n          [261.5773  ,  13.375662],\n          [291.65295 ,  15.865947],\n          ...,\n          [310.4305  , 227.81448 ],\n          [310.4305  , 227.81448 ],\n          [310.4305  , 227.81448 ]]],\n\n\n        [[[ 15.029976,  11.112944],\n          [ 46.635067,  11.104717],\n          [111.41134 ,  10.533341],\n          ...,\n          [309.01636 , 228.49155 ],\n          [309.01636 , 228.49155 ],\n          [309.01636 , 228.49155 ]],\n\n         [[ 17.963165,  11.429725],\n          [ 50.403515,  10.45059 ],\n          [115.49455 ,   9.507573],\n          ...,\n          [313.09732 , 229.15797 ],\n          [313.09732 , 229.15797 ],\n          [313.09732 , 229.15797 ]]]],\n\n\n\n       [[[[  8.688846,  19.178642],\n          [ 38.308414,  18.164816],\n          [ 71.62403 ,  19.129774],\n          ...,\n          [295.9474  , 226.7316  ],\n          [295.9474  , 226.7316  ],\n          [295.9474  , 226.7316  ]],\n\n         [[ 11.132132,  18.802273],\n          [ 41.8764  ,  18.12421 ],\n          [ 74.02643 ,  20.503298],\n          ...,\n          [299.3722  , 227.36603 ],\n          [299.3722  , 227.36603 ],\n          [299.3722  , 227.36603 ]]],\n\n\n        [[[211.67403 ,  14.720347],\n          [245.98233 ,  17.753399],\n          [276.41263 ,  17.231749],\n          ...,\n          [229.5112  , 235.05064 ],\n          [229.5112  , 235.05064 ],\n          [229.5112  , 235.05064 ]],\n\n         [[216.00827 ,  15.002942],\n          [249.34021 ,  17.040041],\n          [279.8017  ,  17.83906 ],\n          ...,\n          [232.82513 , 235.46095 ],\n          [232.82513 , 235.46095 ],\n          [232.82513 , 235.46095 ]]]],\n\n\n\n       [[[[ 29.362791,  33.948517],\n          [ 62.65391 ,  33.323353],\n          [ 95.89835 ,  33.33557 ],\n          ...,\n          [290.0932  , 220.1655  ],\n          [290.0932  , 220.1655  ],\n          [290.0932  , 220.1655  ]],\n\n         [[ 33.039   ,  34.319363],\n          [ 67.14808 ,  32.518806],\n          [ 99.05751 ,  32.84287 ],\n          ...,\n          [292.91217 , 220.1288  ],\n          [292.91217 , 220.1288  ],\n          [292.91217 , 220.1288  ]]],\n\n\n        [[[ 30.388906,  33.26042 ],\n          [ 66.809204,  32.52679 ],\n          [101.832375,  28.901999],\n          ...,\n          [283.4845  , 224.21918 ],\n          [283.4845  , 224.21918 ],\n          [283.4845  , 224.21918 ]],\n\n         [[ 34.255367,  33.11468 ],\n          [ 71.387634,  32.66677 ],\n          [104.965416,  29.925398],\n          ...,\n          [286.43872 , 225.1526  ],\n          [286.43872 , 225.1526  ],\n          [286.43872 , 225.1526  ]]]],\n\n\n\n       [[[[ 12.495041,  16.653305],\n          [ 42.73657 ,  16.150295],\n          [ 76.947426,  16.136154],\n          ...,\n          [303.39624 , 230.23167 ],\n          [303.39624 , 230.23167 ],\n          [303.39624 , 230.23167 ]],\n\n         [[ 15.825989,  16.825361],\n          [ 45.35361 ,  15.697975],\n          [ 79.67834 ,  15.581617],\n          ...,\n          [305.74783 , 231.98177 ],\n          [305.74783 , 231.98177 ],\n          [305.74783 , 231.98177 ]]],\n\n\n        [[[ 22.286934,  16.198765],\n          [ 56.558132,  16.240543],\n          [ 91.29313 ,  18.25412 ],\n          ...,\n          [295.87332 , 207.31094 ],\n          [295.87332 , 207.31094 ],\n          [295.87332 , 207.31094 ]],\n\n         [[ 25.010696,  17.26789 ],\n          [ 60.812824,  16.88834 ],\n          [ 94.57675 ,  17.17395 ],\n          ...,\n          [299.70163 , 206.72034 ],\n          [299.70163 , 206.72034 ],\n          [299.70163 , 206.72034 ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 4, 'buffer_size': 200000, 'batch_size': 128, 'learning_starts': 2000, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7fac24cbb850>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7fac24ccd870>', 'actor': 'Actor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=256, bias=True)\n    (7): Tanh()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7fabe022b9a0>'}
