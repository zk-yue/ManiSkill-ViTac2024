wandb_version: 1

env:
  desc: null
  value:
    step_penalty: 1
    final_reward: 10
    max_action:
    - 2.0
    - 2.0
    - 4.0
    max_steps: 8
    z_step_size: 0.125
    peg_hole_path_file: configs/peg_insertion/3shape_1.5mm.txt
    peg_x_max_offset: 5.0
    peg_y_max_offset: 5.0
    peg_theta_max_offset: 10.0
    marker_interval_range:
    - 1.95
    - 2.15
    marker_rotation_range: 0.1
    marker_translation_range:
    - 1
    - 1
    marker_pos_shift_range:
    - 0.1
    - 0.1
    marker_random_noise: 0.5
    marker_lose_tracking_probability: 0.01
    normalize: false
policy:
  desc: null
  value:
    buffer_size: 200000
    train_freq: 2
    gradient_steps: -1
    learning_starts: 2000
    target_policy_noise: 0.5
    target_noise_clip: 1
    action_noise: VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5
      0.5])), n_envs=2)
    batch_size: 128
    learning_rate: 0.0003
    policy_delay: 2
    policy_kwargs:
      net_arch:
        pi:
        - 256
        - 256
        - 256
        qf:
        - 256
        - 256
      pointnet_in_dim: 4
      pointnet_out_dim: 32
      pointnet_batchnorm: false
      pointnet_layernorm: true
      zero_init_output: true
    device: cuda:0
    seed: 0
    tensorboard_log: /home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/scripts/../training_log/TD3_3shape_1.5mm_2024-04-01_16-23-34.485
train:
  desc: null
  value:
    algorithm_name: TD3
    total_timesteps: 500000
    log_interval: 10
    checkpoint_every: 2000
    eval_freq: 2000
    n_eval: 50
    parallel: 2
    seed: 0
    device: cuda:0
    gpu: 0
    name: TD3_3shape_1.5mm
    wandb_name: ManiSkill_ViTac_TD3
    emp: {}
cfg:
  desc: null
  value: configs/parameters/peg_insertion_td3.yaml
no_render:
  desc: null
  value: false
_wandb:
  desc: null
  value:
    code_path: code/scripts/train_td3.py
    python_version: 3.10.0
    cli_version: 0.16.0
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    start_time: 1711959819.990084
    t:
      1:
      - 1
      - 5
      - 53
      - 55
      2:
      - 1
      - 5
      - 53
      - 55
      3:
      - 13
      - 16
      - 22
      - 23
      - 35
      4: 3.10.0
      5: 0.16.0
      8:
      - 5
      13: linux-x86_64
algo:
  desc: null
  value: TD3
policy_class:
  desc: null
  value: <class 'solutions.policies_td3.TD3PolicyForPointFlowEnv'>
device:
  desc: null
  value: cuda:0
verbose:
  desc: null
  value: 1
policy_kwargs:
  desc: null
  value: '{''net_arch'': {''pi'': [256, 256, 256], ''qf'': [256, 256]}, ''pointnet_in_dim'':
    4, ''pointnet_out_dim'': 32, ''pointnet_batchnorm'': False, ''pointnet_layernorm'':
    True, ''zero_init_output'': True}'
num_timesteps:
  desc: null
  value: 0
_total_timesteps:
  desc: null
  value: 500000
_num_timesteps_at_start:
  desc: null
  value: 0
seed:
  desc: null
  value: 0
action_noise:
  desc: null
  value: VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=2)
start_time:
  desc: null
  value: 1711959825956566995
learning_rate:
  desc: null
  value: 0.0003
tensorboard_log:
  desc: null
  value: /home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/scripts/../training_log/TD3_3shape_1.5mm_2024-04-01_16-23-34.485
_last_obs:
  desc: null
  value: "OrderedDict([('gt_offset', array([[-1.122809 ,  4.691079 , -2.663001 ],\n\
    \       [ 4.740545 ,  2.6562374,  6.393549 ]], dtype=float32)), ('marker_flow',\
    \ array([[[[[ 23.795366,  37.96015 ],\n          [ 59.14034 ,  37.869225],\n \
    \         [ 92.035355,  35.944572],\n          ...,\n          [299.54834 , 221.90346\
    \ ],\n          [299.54834 , 221.90346 ],\n          [299.54834 , 221.90346 ]],\n\
    \n         [[ 26.499485,  37.729717],\n          [ 63.542152,  37.895485],\n \
    \         [ 94.72978 ,  35.858368],\n          ...,\n          [302.3186  , 221.85463\
    \ ],\n          [302.3186  , 221.85463 ],\n          [302.3186  , 221.85463 ]]],\n\
    \n\n        [[[ 13.941163,  39.47578 ],\n          [ 46.767532,  35.761963],\n\
    \          [ 80.97619 ,  32.663033],\n          ...,\n          [304.4328  , 214.06117\
    \ ],\n          [304.4328  , 214.06117 ],\n          [304.4328  , 214.06117 ]],\n\
    \n         [[ 16.023209,  40.565033],\n          [ 49.55409 ,  35.39734 ],\n \
    \         [ 83.23618 ,  34.14725 ],\n          ...,\n          [306.65485 , 214.60979\
    \ ],\n          [306.65485 , 214.60979 ],\n          [306.65485 , 214.60979 ]]]],\n\
    \n\n\n       [[[[ 31.76217 ,   9.170809],\n          [ 97.74235 ,  11.038345],\n\
    \          [133.10478 ,  12.376402],\n          ...,\n          [187.70016 , 240.07465\
    \ ],\n          [187.70016 , 240.07465 ],\n          [187.70016 , 240.07465 ]],\n\
    \n         [[ 35.531403,  10.391965],\n          [102.49878 ,  11.058813],\n \
    \         [135.9455  ,  11.521471],\n          ...,\n          [190.9476  , 239.8158\
    \  ],\n          [190.9476  , 239.8158  ],\n          [190.9476  , 239.8158  ]]],\n\
    \n\n        [[[ 10.533535,  31.465853],\n          [ 43.445347,  31.798962],\n\
    \          [ 75.353874,  32.35361 ],\n          ...,\n          [301.1252  , 215.13225\
    \ ],\n          [301.1252  , 215.13225 ],\n          [301.1252  , 215.13225 ]],\n\
    \n         [[ 13.808849,  31.99705 ],\n          [ 46.240875,  32.921284],\n \
    \         [ 79.429115,  32.893772],\n          ...,\n          [302.84683 , 215.92549\
    \ ],\n          [302.84683 , 215.92549 ],\n          [302.84683 , 215.92549 ]]]]],\
    \ dtype=float32))])"
_last_episode_starts:
  desc: null
  value: '[ True  True]'
_last_original_obs:
  desc: null
  value: None
_episode_num:
  desc: null
  value: 0
use_sde:
  desc: null
  value: 'False'
sde_sample_freq:
  desc: null
  value: -1
_current_progress_remaining:
  desc: null
  value: 1.0
_stats_window_size:
  desc: null
  value: 100
ep_info_buffer:
  desc: null
  value: deque([], maxlen=100)
ep_success_buffer:
  desc: null
  value: deque([], maxlen=100)
_n_updates:
  desc: null
  value: 0
_custom_logger:
  desc: null
  value: 'False'
_vec_normalize_env:
  desc: null
  value: None
observation_space:
  desc: null
  value: 'Dict(''gt_offset'': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), ''marker_flow'':
    Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))'
action_space:
  desc: null
  value: Box(-1.0, 1.0, (3,), float32)
n_envs:
  desc: null
  value: 2
buffer_size:
  desc: null
  value: 200000
batch_size:
  desc: null
  value: 128
learning_starts:
  desc: null
  value: 2000
tau:
  desc: null
  value: 0.005
gamma:
  desc: null
  value: 0.99
gradient_steps:
  desc: null
  value: -1
optimize_memory_usage:
  desc: null
  value: 'False'
replay_buffer:
  desc: null
  value: <stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f2f152d2fb0>
replay_buffer_class:
  desc: null
  value: <class 'stable_baselines3.common.buffers.DictReplayBuffer'>
replay_buffer_kwargs:
  desc: null
  value: '{}'
_episode_storage:
  desc: null
  value: None
train_freq:
  desc: null
  value: 'TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde_at_warmup:
  desc: null
  value: 'False'
policy_delay:
  desc: null
  value: 2
target_noise_clip:
  desc: null
  value: 1
target_policy_noise:
  desc: null
  value: 0.5
lr_schedule:
  desc: null
  value: <function constant_fn.<locals>.func at 0x7f2f152e9990>
actor:
  desc: null
  value: "customActor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n\
    \    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea):\
    \ Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n   \
    \     (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,),\
    \ stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea):\
    \ PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n\
    \        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,),\
    \ stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,),\
    \ stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n\
    \        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1):\
    \ ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n\
    \      )\n    )\n  )\n  (mu): Sequential(\n    (0): Linear(in_features=64, out_features=256,\
    \ bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3,\
    \ bias=True)\n    (7): Tanh()\n  )\n  (mlp_policy): Sequential(\n    (0): Linear(in_features=64,\
    \ out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n\
    \    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n\
    \    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n\
    \  )\n)"
actor_target:
  desc: null
  value: "customActor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n\
    \    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea):\
    \ Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n   \
    \     (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,),\
    \ stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea):\
    \ PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n\
    \        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,),\
    \ stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,),\
    \ stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n\
    \        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1):\
    \ ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n\
    \      )\n    )\n  )\n  (mu): Sequential(\n    (0): Linear(in_features=64, out_features=256,\
    \ bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3,\
    \ bias=True)\n    (7): Tanh()\n  )\n  (mlp_policy): Sequential(\n    (0): Linear(in_features=64,\
    \ out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n\
    \    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n\
    \    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n\
    \  )\n)"
critic:
  desc: null
  value: "ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0):\
    \ Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n \
    \   (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n)"
critic_target:
  desc: null
  value: "ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0):\
    \ Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n \
    \   (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n)"
actor_batch_norm_stats:
  desc: null
  value: '[]'
critic_batch_norm_stats:
  desc: null
  value: '[]'
actor_batch_norm_stats_target:
  desc: null
  value: '[]'
critic_batch_norm_stats_target:
  desc: null
  value: '[]'
_logger:
  desc: null
  value: <stable_baselines3.common.logger.Logger object at 0x7f3078c8a0e0>
