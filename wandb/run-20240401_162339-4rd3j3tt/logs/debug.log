2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_setup.py:_flush():76] Configure stats pid to 14808
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/.config/wandb/settings
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/wandb/settings
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_td3.py', 'program_abspath': '/home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/scripts/train_td3.py', 'program': '/home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/scripts/train_td3.py'}
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_init.py:_log_setup():524] Logging user logs to /home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/wandb/run-20240401_162339-4rd3j3tt/logs/debug.log
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_init.py:_log_setup():525] Logging internal logs to /home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/wandb/run-20240401_162339-4rd3j3tt/logs/debug-internal.log
2024-04-01 16:23:39,976 INFO    MainThread:14808 [wandb_init.py:init():564] calling init triggers
2024-04-01 16:23:39,977 INFO    MainThread:14808 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.5mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 2000, 'target_policy_noise': 0.5, 'target_noise_clip': 1, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=2), 'batch_size': 128, 'learning_rate': 0.0003, 'policy_delay': 2, 'policy_kwargs': {'net_arch': {'pi': [256, 256, 256], 'qf': [256, 256]}, 'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/scripts/../training_log/TD3_3shape_1.5mm_2024-04-01_16-23-34.485'}, 'train': {'algorithm_name': 'TD3', 'total_timesteps': 500000, 'log_interval': 10, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 2, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': 'TD3_3shape_1.5mm', 'wandb_name': 'ManiSkill_ViTac_TD3', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_td3.yaml', 'no_render': False}
2024-04-01 16:23:39,977 INFO    MainThread:14808 [wandb_init.py:init():614] starting backend
2024-04-01 16:23:39,977 INFO    MainThread:14808 [wandb_init.py:init():618] setting up manager
2024-04-01 16:23:39,981 INFO    MainThread:14808 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-04-01 16:23:39,989 INFO    MainThread:14808 [wandb_init.py:init():624] backend started and connected
2024-04-01 16:23:39,997 INFO    MainThread:14808 [wandb_init.py:init():716] updated telemetry
2024-04-01 16:23:40,002 INFO    MainThread:14808 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-04-01 16:23:41,227 INFO    MainThread:14808 [wandb_run.py:_on_init():2254] communicating current version
2024-04-01 16:23:42,065 INFO    MainThread:14808 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.5 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-04-01 16:23:42,065 INFO    MainThread:14808 [wandb_init.py:init():800] starting run threads in backend
2024-04-01 16:23:45,956 INFO    MainThread:14808 [wandb_run.py:_console_start():2233] atexit reg
2024-04-01 16:23:45,956 INFO    MainThread:14808 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-04-01 16:23:45,956 INFO    MainThread:14808 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-04-01 16:23:45,956 INFO    MainThread:14808 [wandb_run.py:_redirect():2178] Redirects installed.
2024-04-01 16:23:45,956 INFO    MainThread:14808 [wandb_init.py:init():841] run started, returning control to user process
2024-04-01 16:23:48,816 INFO    MainThread:14808 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/scripts/../training_log/TD3_3shape_1.5mm_2024-04-01_16-23-34.485/TD3_1, True
2024-04-01 16:23:48,820 INFO    MainThread:14808 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'TD3', 'policy_class': "<class 'solutions.policies_td3.TD3PolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'net_arch': {'pi': [256, 256, 256], 'qf': [256, 256]}, 'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=2)', 'start_time': 1711959825956566995, 'learning_rate': 0.0003, 'tensorboard_log': '/home/yuezk/yzk/ViTac/5_sac_revised/ManiSkill-ViTac2024/scripts/../training_log/TD3_3shape_1.5mm_2024-04-01_16-23-34.485', '_last_obs': "OrderedDict([('gt_offset', array([[-1.122809 ,  4.691079 , -2.663001 ],\n       [ 4.740545 ,  2.6562374,  6.393549 ]], dtype=float32)), ('marker_flow', array([[[[[ 23.795366,  37.96015 ],\n          [ 59.14034 ,  37.869225],\n          [ 92.035355,  35.944572],\n          ...,\n          [299.54834 , 221.90346 ],\n          [299.54834 , 221.90346 ],\n          [299.54834 , 221.90346 ]],\n\n         [[ 26.499485,  37.729717],\n          [ 63.542152,  37.895485],\n          [ 94.72978 ,  35.858368],\n          ...,\n          [302.3186  , 221.85463 ],\n          [302.3186  , 221.85463 ],\n          [302.3186  , 221.85463 ]]],\n\n\n        [[[ 13.941163,  39.47578 ],\n          [ 46.767532,  35.761963],\n          [ 80.97619 ,  32.663033],\n          ...,\n          [304.4328  , 214.06117 ],\n          [304.4328  , 214.06117 ],\n          [304.4328  , 214.06117 ]],\n\n         [[ 16.023209,  40.565033],\n          [ 49.55409 ,  35.39734 ],\n          [ 83.23618 ,  34.14725 ],\n          ...,\n          [306.65485 , 214.60979 ],\n          [306.65485 , 214.60979 ],\n          [306.65485 , 214.60979 ]]]],\n\n\n\n       [[[[ 31.76217 ,   9.170809],\n          [ 97.74235 ,  11.038345],\n          [133.10478 ,  12.376402],\n          ...,\n          [187.70016 , 240.07465 ],\n          [187.70016 , 240.07465 ],\n          [187.70016 , 240.07465 ]],\n\n         [[ 35.531403,  10.391965],\n          [102.49878 ,  11.058813],\n          [135.9455  ,  11.521471],\n          ...,\n          [190.9476  , 239.8158  ],\n          [190.9476  , 239.8158  ],\n          [190.9476  , 239.8158  ]]],\n\n\n        [[[ 10.533535,  31.465853],\n          [ 43.445347,  31.798962],\n          [ 75.353874,  32.35361 ],\n          ...,\n          [301.1252  , 215.13225 ],\n          [301.1252  , 215.13225 ],\n          [301.1252  , 215.13225 ]],\n\n         [[ 13.808849,  31.99705 ],\n          [ 46.240875,  32.921284],\n          [ 79.429115,  32.893772],\n          ...,\n          [302.84683 , 215.92549 ],\n          [302.84683 , 215.92549 ],\n          [302.84683 , 215.92549 ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 2, 'buffer_size': 200000, 'batch_size': 128, 'learning_starts': 2000, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f2f152d2fb0>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'policy_delay': 2, 'target_noise_clip': 1, 'target_policy_noise': 0.5, 'lr_schedule': '<function constant_fn.<locals>.func at 0x7f2f152e9990>', 'actor': 'customActor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (mu): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=256, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n  )\n  (mlp_policy): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n  )\n)', 'actor_target': 'customActor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (mu): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=256, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n  )\n  (mlp_policy): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n  )\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'actor_batch_norm_stats': '[]', 'critic_batch_norm_stats': '[]', 'actor_batch_norm_stats_target': '[]', 'critic_batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7f3078c8a0e0>'}
