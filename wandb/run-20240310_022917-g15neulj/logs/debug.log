2024-03-10 02:29:17,023 INFO    MainThread:46532 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-10 02:29:17,024 INFO    MainThread:46532 [wandb_setup.py:_flush():76] Configure stats pid to 46532
2024-03-10 02:29:17,024 INFO    MainThread:46532 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/.config/wandb/settings
2024-03-10 02:29:17,024 INFO    MainThread:46532 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/settings
2024-03-10 02:29:17,024 INFO    MainThread:46532 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-10 02:29:17,024 INFO    MainThread:46532 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-10 02:29:17,024 INFO    MainThread:46532 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-10 02:29:17,024 INFO    MainThread:46532 [wandb_init.py:_log_setup():524] Logging user logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240310_022917-g15neulj/logs/debug.log
2024-03-10 02:29:17,025 INFO    MainThread:46532 [wandb_init.py:_log_setup():525] Logging internal logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240310_022917-g15neulj/logs/debug-internal.log
2024-03-10 02:29:17,025 INFO    MainThread:46532 [wandb_init.py:init():564] calling init triggers
2024-03-10 02:29:17,026 INFO    MainThread:46532 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.0mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 32, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4), 'batch_size': 64, 'learning_rate': 0.0003, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-10_02-28-05.841'}, 'train': {'total_timesteps': 500000, 'log_interval': 10, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 4, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': '7shape_1.5mm', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_sac.yaml', 'no_render': False}
2024-03-10 02:29:17,026 INFO    MainThread:46532 [wandb_init.py:init():614] starting backend
2024-03-10 02:29:17,026 INFO    MainThread:46532 [wandb_init.py:init():618] setting up manager
2024-03-10 02:29:17,029 INFO    MainThread:46532 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-10 02:29:17,031 INFO    MainThread:46532 [wandb_init.py:init():624] backend started and connected
2024-03-10 02:29:17,037 INFO    MainThread:46532 [wandb_init.py:init():716] updated telemetry
2024-03-10 02:29:17,044 INFO    MainThread:46532 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-10 02:29:18,206 INFO    MainThread:46532 [wandb_run.py:_on_init():2254] communicating current version
2024-03-10 02:29:18,858 INFO    MainThread:46532 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-10 02:29:18,858 INFO    MainThread:46532 [wandb_init.py:init():800] starting run threads in backend
2024-03-10 02:29:22,920 INFO    MainThread:46532 [wandb_run.py:_console_start():2233] atexit reg
2024-03-10 02:29:22,921 INFO    MainThread:46532 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-10 02:29:22,922 INFO    MainThread:46532 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-10 02:29:22,922 INFO    MainThread:46532 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-10 02:29:22,923 INFO    MainThread:46532 [wandb_init.py:init():841] run started, returning control to user process
2024-03-10 02:29:34,840 INFO    MainThread:46532 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-10_02-28-05.841/SAC_1, True
2024-03-10 02:29:34,890 INFO    MainThread:46532 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4)', 'start_time': 1710008967848045588, 'learning_rate': 0.0003, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-10_02-28-05.841', '_last_obs': "OrderedDict([('gt_offset', array([[-2.3728538 ,  4.491601  ,  7.2462373 ],\n       [ 1.2080413 , -3.4470875 , -2.814112  ],\n       [-0.01742603, -2.7304876 , -5.6096344 ],\n       [-3.4039764 , -3.813636  ,  7.611666  ]], dtype=float32)), ('marker_flow', array([[[[[  9.669184,  33.494247],\n          [ 44.492256,  33.736763],\n          [ 78.038155,  34.83177 ],\n          ...,\n          [298.3029  , 230.2636  ],\n          [298.3029  , 230.2636  ],\n          [298.3029  , 230.2636  ]],\n\n         [[ 13.017457,  34.04751 ],\n          [ 46.773247,  33.624924],\n          [ 81.81777 ,  35.85132 ],\n          ...,\n          [301.30594 , 229.85576 ],\n          [301.30594 , 229.85576 ],\n          [301.30594 , 229.85576 ]]],\n\n\n        [[[  8.591345,  19.740711],\n          [ 38.28331 ,  20.371183],\n          [ 72.148674,  15.910681],\n          ...,\n          [283.5713  , 215.8707  ],\n          [283.5713  , 215.8707  ],\n          [283.5713  , 215.8707  ]],\n\n         [[ 10.76419 ,  20.316378],\n          [ 40.135464,  19.043596],\n          [ 75.23291 ,  16.284506],\n          ...,\n          [287.02673 , 216.12405 ],\n          [287.02673 , 216.12405 ],\n          [287.02673 , 216.12405 ]]]],\n\n\n\n       [[[[  8.419262,  21.353144],\n          [ 42.709057,  22.779432],\n          [ 77.70361 ,  23.300161],\n          ...,\n          [302.7971  , 224.77756 ],\n          [302.7971  , 224.77756 ],\n          [302.7971  , 224.77756 ]],\n\n         [[ 11.71495 ,  21.327333],\n          [ 45.931416,  22.909678],\n          [ 79.30498 ,  23.925743],\n          ...,\n          [304.25095 , 224.46144 ],\n          [304.25095 , 224.46144 ],\n          [304.25095 , 224.46144 ]]],\n\n\n        [[[ 25.441236,  29.21932 ],\n          [ 59.49643 ,  31.929522],\n          [ 94.07566 ,  32.741318],\n          ...,\n          [290.33908 , 228.4897  ],\n          [290.33908 , 228.4897  ],\n          [290.33908 , 228.4897  ]],\n\n         [[ 28.45102 ,  29.552801],\n          [ 63.722622,  31.76548 ],\n          [ 98.20232 ,  32.96862 ],\n          ...,\n          [293.15265 , 228.67026 ],\n          [293.15265 , 228.67026 ],\n          [293.15265 , 228.67026 ]]]],\n\n\n\n       [[[[ 21.481894,  43.223946],\n          [ 57.17615 ,  41.281624],\n          [ 89.96845 ,  42.641613],\n          ...,\n          [297.46115 , 236.8837  ],\n          [297.46115 , 236.8837  ],\n          [297.46115 , 236.8837  ]],\n\n         [[ 24.616451,  42.02219 ],\n          [ 60.74252 ,  40.869152],\n          [ 93.14099 ,  42.121292],\n          ...,\n          [302.3068  , 238.63705 ],\n          [302.3068  , 238.63705 ],\n          [302.3068  , 238.63705 ]]],\n\n\n        [[[112.71406 ,  11.170289],\n          [182.00545 ,  13.908776],\n          [218.29147 ,  13.353241],\n          ...,\n          [283.42493 , 213.57693 ],\n          [283.42493 , 213.57693 ],\n          [283.42493 , 213.57693 ]],\n\n         [[116.04943 ,  10.259037],\n          [184.30283 ,  12.942764],\n          [223.13959 ,  13.619348],\n          ...,\n          [286.23688 , 213.27966 ],\n          [286.23688 , 213.27966 ],\n          [286.23688 , 213.27966 ]]]],\n\n\n\n       [[[[ 14.337858,  14.930899],\n          [ 50.06877 ,  17.299248],\n          [ 84.53694 ,  20.833385],\n          ...,\n          [302.91177 , 233.77434 ],\n          [302.91177 , 233.77434 ],\n          [302.91177 , 233.77434 ]],\n\n         [[ 18.203026,  14.315481],\n          [ 52.509686,  17.647112],\n          [ 87.72129 ,  20.013643],\n          ...,\n          [306.1366  , 233.82304 ],\n          [306.1366  , 233.82304 ],\n          [306.1366  , 233.82304 ]]],\n\n\n        [[[ 11.512327,  31.27203 ],\n          [ 46.006264,  30.539923],\n          [ 81.19753 ,  29.386099],\n          ...,\n          [295.4468  , 216.3907  ],\n          [295.4468  , 216.3907  ],\n          [295.4468  , 216.3907  ]],\n\n         [[ 14.126054,  30.363987],\n          [ 49.75004 ,  32.101345],\n          [ 83.22357 ,  29.074223],\n          ...,\n          [299.0946  , 217.37456 ],\n          [299.0946  , 217.37456 ],\n          [299.0946  , 217.37456 ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 4, 'buffer_size': 200000, 'batch_size': 64, 'learning_starts': 32, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f3716835c00>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7f3727d0eb90>', 'actor': 'CustomActor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n  (mlp_policy): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n  )\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7f36dc63a3e0>'}
