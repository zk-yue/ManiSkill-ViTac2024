diff --git a/configs/parameters/peg_insertion.yaml b/configs/parameters/peg_insertion.yaml
index d42e567..222c467 100644
--- a/configs/parameters/peg_insertion.yaml
+++ b/configs/parameters/peg_insertion.yaml
@@ -58,11 +58,11 @@ policy:
   buffer_size: 200000
   train_freq: 2
   gradient_steps: -1
-  learning_starts: 2000
+  learning_starts: 32
   target_policy_noise: 0.5
   target_noise_clip: 1
   action_noise: 0.5
-  batch_size: 128
+  batch_size: 64
   learning_rate: 0.0003
   policy_delay: 2
 
diff --git a/envs/long_open_lock.py b/envs/long_open_lock.py
index 5aab093..df87742 100644
--- a/envs/long_open_lock.py
+++ b/envs/long_open_lock.py
@@ -9,12 +9,13 @@ from matplotlib import pyplot as plt
 from path import Path
 from sapienipc.ipc_utils.user_utils import ipc_update_render_all
 
-from envs.common_params import CommonParams
+
 
 script_path = os.path.dirname(os.path.realpath(__file__))
 repo_path = os.path.join(script_path, "..")
 sys.path.append(script_path)
 sys.path.append(repo_path)
+from envs.common_params import CommonParams
 import time
 from typing import List, Tuple
 
diff --git a/scripts/universal_training_script.py b/scripts/universal_training_script.py
index 1738c03..bb4309d 100644
--- a/scripts/universal_training_script.py
+++ b/scripts/universal_training_script.py
@@ -14,6 +14,7 @@ from path import Path
 from solutions.policies import (
     TD3PolicyForPointFlowEnv, TD3PolicyForLongOpenLockPointFlowEnv
 )
+
 from stable_baselines3 import TD3
 from stable_baselines3.common.callbacks import (CallbackList,
                                                 CheckpointCallback,
@@ -24,6 +25,7 @@ from utils.common import get_time
 from wandb.integration.sb3 import WandbCallback
 
 import wandb
+
 from arguments import *
 
 algorithm_aliases = {
@@ -51,6 +53,7 @@ def make_env(env_name, seed=0, i=0, **env_args):
 if __name__ == "__main__":
     parser = get_parser()
     args = parser.parse_args()
+    args.cfg='configs/parameters/peg_insertion.yaml'
     with open(args.cfg, "r") as f:
         cfg = yaml.YAML(typ='safe', pure=True).load(f)
 
diff --git a/solutions/actor_and_critics.py b/solutions/actor_and_critics.py
index 6445222..d00d423 100644
--- a/solutions/actor_and_critics.py
+++ b/solutions/actor_and_critics.py
@@ -79,9 +79,9 @@ class PointNetActor(Actor):
         l_point_flow_fea = point_flow_fea[:batch_num, ...]
         r_point_flow_fea = point_flow_fea[batch_num:, ...]
 
-        point_flow_fea = torch.cat([l_point_flow_fea, r_point_flow_fea], dim=-1)
+        point_flow_fea = torch.cat([l_point_flow_fea, r_point_flow_fea], dim=-1) # [2*64]
 
-        pred = self.mlp_policy(point_flow_fea)
+        pred = self.mlp_policy(point_flow_fea) # [2*3]
 
         return pred
 
diff --git a/solutions/networks.py b/solutions/networks.py
index 8e6f27e..3001c01 100644
--- a/solutions/networks.py
+++ b/solutions/networks.py
@@ -104,7 +104,7 @@ class PointNetFeatureExtractor(nn.Module):
         if marker_pos.ndim == 2:
             marker_pos = torch.unsqueeze(marker_pos, dim=0)
 
-        marker_pos = torch.transpose(marker_pos, 1, 2)
+        marker_pos = torch.transpose(marker_pos, 1, 2) # 感觉不需要 添加了变为(batch_num, self.pointnet_local_feature_num, point_num)
 
         batch_num = marker_pos.shape[0]
         point_num = marker_pos.shape[2]
