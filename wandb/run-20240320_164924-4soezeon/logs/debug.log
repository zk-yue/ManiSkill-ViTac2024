2024-03-20 16:49:24,758 INFO    MainThread:25688 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-20 16:49:24,758 INFO    MainThread:25688 [wandb_setup.py:_flush():76] Configure stats pid to 25688
2024-03-20 16:49:24,758 INFO    MainThread:25688 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/.config/wandb/settings
2024-03-20 16:49:24,758 INFO    MainThread:25688 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/settings
2024-03-20 16:49:24,759 INFO    MainThread:25688 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-20 16:49:24,759 INFO    MainThread:25688 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-20 16:49:24,759 INFO    MainThread:25688 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-20 16:49:24,759 INFO    MainThread:25688 [wandb_init.py:_log_setup():524] Logging user logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240320_164924-4soezeon/logs/debug.log
2024-03-20 16:49:24,759 INFO    MainThread:25688 [wandb_init.py:_log_setup():525] Logging internal logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240320_164924-4soezeon/logs/debug-internal.log
2024-03-20 16:49:24,759 INFO    MainThread:25688 [wandb_init.py:init():564] calling init triggers
2024-03-20 16:49:24,760 INFO    MainThread:25688 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.5mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 2000, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4), 'batch_size': 512, 'learning_rate': 0.0001, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/3shape_1.5mm_batch_size_512_lr_0.0001_2024-03-20_16-49-14.316'}, 'train': {'total_timesteps': 500000, 'log_interval': 6, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 4, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': '3shape_1.5mm_batch_size_512_lr_0.0001', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_sac.yaml', 'no_render': False}
2024-03-20 16:49:24,760 INFO    MainThread:25688 [wandb_init.py:init():614] starting backend
2024-03-20 16:49:24,760 INFO    MainThread:25688 [wandb_init.py:init():618] setting up manager
2024-03-20 16:49:24,765 INFO    MainThread:25688 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-20 16:49:24,767 INFO    MainThread:25688 [wandb_init.py:init():624] backend started and connected
2024-03-20 16:49:24,784 INFO    MainThread:25688 [wandb_init.py:init():716] updated telemetry
2024-03-20 16:49:24,793 INFO    MainThread:25688 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-20 16:49:29,876 INFO    MainThread:25688 [wandb_run.py:_on_init():2254] communicating current version
2024-03-20 16:49:30,365 INFO    MainThread:25688 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-20 16:49:30,365 INFO    MainThread:25688 [wandb_init.py:init():800] starting run threads in backend
2024-03-20 16:49:34,723 INFO    MainThread:25688 [wandb_run.py:_console_start():2233] atexit reg
2024-03-20 16:49:34,724 INFO    MainThread:25688 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-20 16:49:34,724 INFO    MainThread:25688 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-20 16:49:34,724 INFO    MainThread:25688 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-20 16:49:34,725 INFO    MainThread:25688 [wandb_init.py:init():841] run started, returning control to user process
2024-03-20 16:50:00,313 INFO    MainThread:25688 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/3shape_1.5mm_batch_size_512_lr_0.0001_2024-03-20_16-49-14.316/SAC_1, True
2024-03-20 16:50:00,355 INFO    MainThread:25688 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4)', 'start_time': 1710924574726366512, 'learning_rate': 0.0001, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/3shape_1.5mm_batch_size_512_lr_0.0001_2024-03-20_16-49-14.316', '_last_obs': "OrderedDict([('gt_offset', array([[-1.8596221, -4.574301 ,  1.9105394],\n       [ 4.547124 ,  4.276306 , -3.0559955],\n       [-2.1110737,  2.9072134, -6.531638 ],\n       [-1.1700877, -1.672888 ,  9.009623 ]], dtype=float32)), ('marker_flow', array([[[[[ 22.430561 ,  24.748943 ],\n          [ 56.649303 ,  24.132324 ],\n          [ 90.28888  ,  23.011066 ],\n          ...,\n          [301.8691   , 235.04755  ],\n          [301.8691   , 235.04755  ],\n          [301.8691   , 235.04755  ]],\n\n         [[ 26.667873 ,  25.13817  ],\n          [ 60.034283 ,  22.406149 ],\n          [ 93.96088  ,  21.75981  ],\n          ...,\n          [304.99097  , 235.77419  ],\n          [304.99097  , 235.77419  ],\n          [304.99097  , 235.77419  ]]],\n\n\n        [[[ 73.73886  ,  11.313962 ],\n          [109.19827  ,  14.963713 ],\n          [145.63916  ,  18.161497 ],\n          ...,\n          [298.08148  , 236.2939   ],\n          [298.08148  , 236.2939   ],\n          [298.08148  , 236.2939   ]],\n\n         [[ 77.41541  ,  10.755278 ],\n          [113.8159   ,  15.370936 ],\n          [149.6951   ,  18.72521  ],\n          ...,\n          [302.89236  , 236.44678  ],\n          [302.89236  , 236.44678  ],\n          [302.89236  , 236.44678  ]]]],\n\n\n\n       [[[[ 33.57195  ,  37.271767 ],\n          [ 69.08759  ,  35.63102  ],\n          [102.7152   ,  35.899586 ],\n          ...,\n          [312.59543  , 214.9584   ],\n          [312.59543  , 214.9584   ],\n          [312.59543  , 214.9584   ]],\n\n         [[ 36.423004 ,  37.901646 ],\n          [ 72.08851  ,  35.848022 ],\n          [106.57639  ,  34.97205  ],\n          ...,\n          [315.42352  , 215.27586  ],\n          [315.42352  , 215.27586  ],\n          [315.42352  , 215.27586  ]]],\n\n\n        [[[ 13.3241205,  26.288235 ],\n          [ 43.584503 ,  26.099518 ],\n          [ 75.10278  ,  23.871878 ],\n          ...,\n          [307.10123  , 239.05159  ],\n          [307.10123  , 239.05159  ],\n          [307.10123  , 239.05159  ]],\n\n         [[ 15.192335 ,  26.663752 ],\n          [ 46.858574 ,  27.070845 ],\n          [ 79.52777  ,  23.99214  ],\n          ...,\n          [311.43698  , 239.19382  ],\n          [311.43698  , 239.19382  ],\n          [311.43698  , 239.19382  ]]]],\n\n\n\n       [[[[ 12.0519285,  22.587934 ],\n          [ 48.834362 ,  24.42665  ],\n          [ 84.96233  ,  27.5819   ],\n          ...,\n          [281.53613  , 237.8482   ],\n          [281.53613  , 237.8482   ],\n          [281.53613  , 237.8482   ]],\n\n         [[ 16.17866  ,  22.023285 ],\n          [ 52.794502 ,  24.91093  ],\n          [ 86.85446  ,  26.773552 ],\n          ...,\n          [285.35837  , 237.01727  ],\n          [285.35837  , 237.01727  ],\n          [285.35837  , 237.01727  ]]],\n\n\n        [[[ 32.58632  ,  33.256416 ],\n          [ 67.612495 ,  34.565773 ],\n          [102.46786  ,  36.34399  ],\n          ...,\n          [304.35367  , 231.59767  ],\n          [304.35367  , 231.59767  ],\n          [304.35367  , 231.59767  ]],\n\n         [[ 35.730465 ,  33.86192  ],\n          [ 70.73911  ,  33.365784 ],\n          [105.32158  ,  34.904686 ],\n          ...,\n          [307.51755  , 232.51016  ],\n          [307.51755  , 232.51016  ],\n          [307.51755  , 232.51016  ]]]],\n\n\n\n       [[[[ 18.237963 ,  20.114325 ],\n          [ 52.049377 ,  19.682398 ],\n          [ 87.853096 ,  19.89993  ],\n          ...,\n          [294.00662  , 205.57373  ],\n          [294.00662  , 205.57373  ],\n          [294.00662  , 205.57373  ]],\n\n         [[ 21.688454 ,  19.867704 ],\n          [ 55.351784 ,  18.31938  ],\n          [ 90.11459  ,  19.091385 ],\n          ...,\n          [297.12082  , 206.91483  ],\n          [297.12082  , 206.91483  ],\n          [297.12082  , 206.91483  ]]],\n\n\n        [[[ 10.110691 ,  28.682516 ],\n          [ 43.872276 ,  29.015438 ],\n          [ 78.795265 ,  27.323612 ],\n          ...,\n          [305.01257  , 219.91841  ],\n          [305.01257  , 219.91841  ],\n          [305.01257  , 219.91841  ]],\n\n         [[ 12.176224 ,  28.781658 ],\n          [ 47.46406  ,  27.75749  ],\n          [ 81.53892  ,  28.263138 ],\n          ...,\n          [307.98553  , 220.59314  ],\n          [307.98553  , 220.59314  ],\n          [307.98553  , 220.59314  ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 4, 'buffer_size': 200000, 'batch_size': 512, 'learning_starts': 2000, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f71cc91e950>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0001\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7f71cc8ec430>', 'actor': 'Actor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): Identity()\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): Identity()\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=256, bias=True)\n    (7): Tanh()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7f733b827910>'}
