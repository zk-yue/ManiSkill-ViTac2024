2024-03-16 19:06:14,166 INFO    MainThread:1720925 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-16 19:06:14,166 INFO    MainThread:1720925 [wandb_setup.py:_flush():76] Configure stats pid to 1720925
2024-03-16 19:06:14,166 INFO    MainThread:1720925 [wandb_setup.py:_flush():76] Loading settings from /home/lab/.config/wandb/settings
2024-03-16 19:06:14,167 INFO    MainThread:1720925 [wandb_setup.py:_flush():76] Loading settings from /media/lab/data/yzk/ManiSkill-ViTac2024/wandb/settings
2024-03-16 19:06:14,167 INFO    MainThread:1720925 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-16 19:06:14,167 INFO    MainThread:1720925 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-16 19:06:14,167 INFO    MainThread:1720925 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-16 19:06:14,167 INFO    MainThread:1720925 [wandb_init.py:_log_setup():524] Logging user logs to /media/lab/data/yzk/ManiSkill-ViTac2024/wandb/run-20240316_190614-fub1xkvi/logs/debug.log
2024-03-16 19:06:14,167 INFO    MainThread:1720925 [wandb_init.py:_log_setup():525] Logging internal logs to /media/lab/data/yzk/ManiSkill-ViTac2024/wandb/run-20240316_190614-fub1xkvi/logs/debug-internal.log
2024-03-16 19:06:14,167 INFO    MainThread:1720925 [wandb_init.py:init():564] calling init triggers
2024-03-16 19:06:14,168 INFO    MainThread:1720925 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.0mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 2000, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4), 'batch_size': 128, 'learning_rate': 0.0003, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-16_19-06-09.418'}, 'train': {'total_timesteps': 500000, 'log_interval': 10, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 4, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': '7shape_1.5mm', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_sac.yaml', 'no_render': False}
2024-03-16 19:06:14,169 INFO    MainThread:1720925 [wandb_init.py:init():614] starting backend
2024-03-16 19:06:14,169 INFO    MainThread:1720925 [wandb_init.py:init():618] setting up manager
2024-03-16 19:06:14,171 INFO    MainThread:1720925 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-16 19:06:14,173 INFO    MainThread:1720925 [wandb_init.py:init():624] backend started and connected
2024-03-16 19:06:14,178 INFO    MainThread:1720925 [wandb_init.py:init():716] updated telemetry
2024-03-16 19:06:14,188 INFO    MainThread:1720925 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-16 19:06:15,260 INFO    MainThread:1720925 [wandb_run.py:_on_init():2254] communicating current version
2024-03-16 19:06:15,812 INFO    MainThread:1720925 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-16 19:06:15,812 INFO    MainThread:1720925 [wandb_init.py:init():800] starting run threads in backend
2024-03-16 19:06:19,087 INFO    MainThread:1720925 [wandb_run.py:_console_start():2233] atexit reg
2024-03-16 19:06:19,087 INFO    MainThread:1720925 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-16 19:06:19,088 INFO    MainThread:1720925 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-16 19:06:19,088 INFO    MainThread:1720925 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-16 19:06:19,090 INFO    MainThread:1720925 [wandb_init.py:init():841] run started, returning control to user process
2024-03-16 19:06:21,954 INFO    MainThread:1720925 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /media/lab/data/yzk/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-16_19-06-09.418/SAC_1, True
2024-03-16 19:06:21,972 INFO    MainThread:1720925 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4)', 'start_time': 1710587179090410955, 'learning_rate': 0.0003, 'tensorboard_log': '/media/lab/data/yzk/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-16_19-06-09.418', '_last_obs': "OrderedDict([('gt_offset', array([[ 4.6332316 ,  0.04214425, -8.176134  ],\n       [ 4.2027755 , -3.2377448 , -1.6411421 ],\n       [-4.1060996 , -3.3648763 , -4.729651  ],\n       [-1.6654761 , -3.0892355 , -2.668343  ]], dtype=float32)), ('marker_flow', array([[[[[ 11.065129,  19.81863 ],\n          [ 42.764656,  22.265646],\n          [113.00757 ,  24.696686],\n          ...,\n          [311.98822 , 234.32079 ],\n          [311.98822 , 234.32079 ],\n          [311.98822 , 234.32079 ]],\n\n         [[ 13.666809,  20.058369],\n          [ 47.54081 ,  23.290894],\n          [116.98821 ,  25.019249],\n          ...,\n          [316.86316 , 232.78879 ],\n          [316.86316 , 232.78879 ],\n          [316.86316 , 232.78879 ]]],\n\n\n        [[[ 25.32162 ,  20.33618 ],\n          [ 59.08399 ,  14.06443 ],\n          [ 92.06635 ,  14.428004],\n          ...,\n          [314.62988 , 218.10217 ],\n          [314.62988 , 218.10217 ],\n          [314.62988 , 218.10217 ]],\n\n         [[ 28.361755,  19.509674],\n          [ 62.59169 ,  14.416962],\n          [ 95.19701 ,  13.518395],\n          ...,\n          [318.0468  , 217.98233 ],\n          [318.0468  , 217.98233 ],\n          [318.0468  , 217.98233 ]]]],\n\n\n\n       [[[[ 11.123183,  15.736976],\n          [ 40.391438,  18.563618],\n          [ 73.90218 ,  19.857624],\n          ...,\n          [183.59125 , 240.08165 ],\n          [183.59125 , 240.08165 ],\n          [183.59125 , 240.08165 ]],\n\n         [[ 14.74146 ,  16.035559],\n          [ 44.367466,  18.80798 ],\n          [ 76.52478 ,  20.041899],\n          ...,\n          [187.74501 , 238.68791 ],\n          [187.74501 , 238.68791 ],\n          [187.74501 , 238.68791 ]]],\n\n\n        [[[ 39.778477,  21.777493],\n          [ 73.34717 ,  21.417725],\n          [107.9713  ,  20.916203],\n          ...,\n          [307.257   , 235.44052 ],\n          [307.257   , 235.44052 ],\n          [307.257   , 235.44052 ]],\n\n         [[ 43.350258,  22.17678 ],\n          [ 76.17867 ,  21.571434],\n          [110.1369  ,  21.465597],\n          ...,\n          [309.7713  , 235.80995 ],\n          [309.7713  , 235.80995 ],\n          [309.7713  , 235.80995 ]]]],\n\n\n\n       [[[[ 21.902222,  29.935827],\n          [ 55.565876,  29.478218],\n          [ 85.973724,  26.465206],\n          ...,\n          [296.30304 , 206.7874  ],\n          [296.30304 , 206.7874  ],\n          [296.30304 , 206.7874  ]],\n\n         [[ 24.568232,  29.824867],\n          [ 58.397713,  30.693247],\n          [ 88.59577 ,  27.832273],\n          ...,\n          [300.03363 , 207.72528 ],\n          [300.03363 , 207.72528 ],\n          [300.03363 , 207.72528 ]]],\n\n\n        [[[ 11.94926 ,  33.840797],\n          [ 45.532883,  36.31784 ],\n          [ 77.770935,  34.244408],\n          ...,\n          [300.38446 , 222.92    ],\n          [300.38446 , 222.92    ],\n          [300.38446 , 222.92    ]],\n\n         [[ 15.549093,  33.36742 ],\n          [ 48.257977,  35.921913],\n          [ 80.81981 ,  35.238686],\n          ...,\n          [303.9076  , 221.87221 ],\n          [303.9076  , 221.87221 ],\n          [303.9076  , 221.87221 ]]]],\n\n\n\n       [[[[ 26.928839,  28.168417],\n          [ 61.07849 ,  30.307396],\n          [ 94.6317  ,  30.515036],\n          ...,\n          [288.40222 , 235.53441 ],\n          [288.40222 , 235.53441 ],\n          [288.40222 , 235.53441 ]],\n\n         [[ 29.817158,  28.069437],\n          [ 65.04682 ,  31.064524],\n          [ 98.98519 ,  30.974384],\n          ...,\n          [291.1639  , 235.7128  ],\n          [291.1639  , 235.7128  ],\n          [291.1639  , 235.7128  ]]],\n\n\n        [[[ 36.061657,  40.92212 ],\n          [ 68.44122 ,  38.94454 ],\n          [103.24175 ,  36.05507 ],\n          ...,\n          [305.02298 , 218.84857 ],\n          [305.02298 , 218.84857 ],\n          [305.02298 , 218.84857 ]],\n\n         [[ 40.42353 ,  41.09768 ],\n          [ 72.49689 ,  38.784374],\n          [106.5213  ,  36.17458 ],\n          ...,\n          [308.66058 , 218.76662 ],\n          [308.66058 , 218.76662 ],\n          [308.66058 , 218.76662 ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 4, 'buffer_size': 200000, 'batch_size': 128, 'learning_starts': 2000, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f5d0517b7c0>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7f5d051917e0>', 'actor': 'Actor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=256, bias=True)\n    (7): Tanh()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7f5d014fbf40>'}
