2024-03-21 19:49:29,962 INFO    MainThread:88848 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-21 19:49:29,962 INFO    MainThread:88848 [wandb_setup.py:_flush():76] Configure stats pid to 88848
2024-03-21 19:49:29,962 INFO    MainThread:88848 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/.config/wandb/settings
2024-03-21 19:49:29,962 INFO    MainThread:88848 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/settings
2024-03-21 19:49:29,962 INFO    MainThread:88848 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-21 19:49:29,962 INFO    MainThread:88848 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-21 19:49:29,962 INFO    MainThread:88848 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-21 19:49:29,963 INFO    MainThread:88848 [wandb_init.py:_log_setup():524] Logging user logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240321_194929-teyb7br8/logs/debug.log
2024-03-21 19:49:29,963 INFO    MainThread:88848 [wandb_init.py:_log_setup():525] Logging internal logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240321_194929-teyb7br8/logs/debug-internal.log
2024-03-21 19:49:29,963 INFO    MainThread:88848 [wandb_init.py:init():564] calling init triggers
2024-03-21 19:49:29,963 INFO    MainThread:88848 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.5mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 2000, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4), 'batch_size': 512, 'learning_rate': 0.0001, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/3shape_1.5mm_batch_size_512_lr_0.0001_2024-03-21_19-49-24.152'}, 'train': {'total_timesteps': 500000, 'log_interval': 6, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 4, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': '3shape_1.5mm_batch_size_512_lr_0.0001', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_sac.yaml', 'no_render': False}
2024-03-21 19:49:29,963 INFO    MainThread:88848 [wandb_init.py:init():614] starting backend
2024-03-21 19:49:29,963 INFO    MainThread:88848 [wandb_init.py:init():618] setting up manager
2024-03-21 19:49:29,967 INFO    MainThread:88848 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-21 19:49:29,975 INFO    MainThread:88848 [wandb_init.py:init():624] backend started and connected
2024-03-21 19:49:29,980 INFO    MainThread:88848 [wandb_init.py:init():716] updated telemetry
2024-03-21 19:49:29,983 INFO    MainThread:88848 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-21 19:49:30,812 INFO    MainThread:88848 [wandb_run.py:_on_init():2254] communicating current version
2024-03-21 19:49:31,242 INFO    MainThread:88848 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-21 19:49:31,242 INFO    MainThread:88848 [wandb_init.py:init():800] starting run threads in backend
2024-03-21 19:49:31,578 INFO    MainThread:88848 [wandb_run.py:_console_start():2233] atexit reg
2024-03-21 19:49:31,578 INFO    MainThread:88848 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-21 19:49:31,579 INFO    MainThread:88848 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-21 19:49:31,579 INFO    MainThread:88848 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-21 19:49:31,580 INFO    MainThread:88848 [wandb_init.py:init():841] run started, returning control to user process
2024-03-21 19:49:39,940 INFO    MainThread:88848 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/3shape_1.5mm_batch_size_512_lr_0.0001_2024-03-21_19-49-24.152/SAC_1, True
2024-03-21 19:49:39,967 INFO    MainThread:88848 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4)', 'start_time': 1711021771581585150, 'learning_rate': 0.0001, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/3shape_1.5mm_batch_size_512_lr_0.0001_2024-03-21_19-49-24.152', '_last_obs': "OrderedDict([('gt_offset', array([[ 2.2938802 , -4.4943037 ,  3.1189811 ],\n       [-2.1202617 , -2.3218715 , -3.9426196 ],\n       [-4.460222  ,  2.3152611 , -7.8929434 ],\n       [-3.0639708 ,  0.17811728,  8.410518  ]], dtype=float32)), ('marker_flow', array([[[[[ 32.16046  ,  35.176533 ],\n          [ 64.72465  ,  35.650883 ],\n          [ 98.21432  ,  37.024216 ],\n          ...,\n          [263.12073  , 239.14171  ],\n          [263.12073  , 239.14171  ],\n          [263.12073  , 239.14171  ]],\n\n         [[ 34.529896 ,  35.159267 ],\n          [ 67.380066 ,  36.711704 ],\n          [102.00276  ,  37.39361  ],\n          ...,\n          [268.56644  , 237.76315  ],\n          [268.56644  , 237.76315  ],\n          [268.56644  , 237.76315  ]]],\n\n\n        [[[  8.426226 ,  29.290194 ],\n          [ 42.312775 ,  30.727467 ],\n          [ 71.63796  ,  29.383474 ],\n          ...,\n          [300.22134  , 207.13823  ],\n          [300.22134  , 207.13823  ],\n          [300.22134  , 207.13823  ]],\n\n         [[ 11.49129  ,  28.972198 ],\n          [ 44.673717 ,  30.590864 ],\n          [ 76.52873  ,  30.531649 ],\n          ...,\n          [304.07397  , 206.96149  ],\n          [304.07397  , 206.96149  ],\n          [304.07397  , 206.96149  ]]]],\n\n\n\n       [[[[ 15.916398 ,  26.32772  ],\n          [ 47.01877  ,  25.413843 ],\n          [ 81.05315  ,  24.73678  ],\n          ...,\n          [308.79456  , 228.32677  ],\n          [308.79456  , 228.32677  ],\n          [308.79456  , 228.32677  ]],\n\n         [[ 21.306372 ,  26.961298 ],\n          [ 51.011723 ,  26.238573 ],\n          [ 84.0533   ,  24.031027 ],\n          ...,\n          [311.1757   , 228.15273  ],\n          [311.1757   , 228.15273  ],\n          [311.1757   , 228.15273  ]]],\n\n\n        [[[ 23.618738 ,  27.673079 ],\n          [ 59.42725  ,  24.752892 ],\n          [ 93.500435 ,  21.867678 ],\n          ...,\n          [289.3137   , 237.65912  ],\n          [289.3137   , 237.65912  ],\n          [289.3137   , 237.65912  ]],\n\n         [[ 27.451887 ,  27.399395 ],\n          [ 61.529312 ,  24.495033 ],\n          [ 97.209564 ,  21.97794  ],\n          ...,\n          [293.92325  , 238.26558  ],\n          [293.92325  , 238.26558  ],\n          [293.92325  , 238.26558  ]]]],\n\n\n\n       [[[[ 25.264782 ,  21.790607 ],\n          [ 59.028473 ,  19.72151  ],\n          [ 92.50741  ,  19.825493 ],\n          ...,\n          [297.21487  , 214.18413  ],\n          [297.21487  , 214.18413  ],\n          [297.21487  , 214.18413  ]],\n\n         [[ 26.311625 ,  20.215603 ],\n          [ 61.997166 ,  20.001217 ],\n          [ 95.99235  ,  19.402895 ],\n          ...,\n          [300.38098  , 215.25064  ],\n          [300.38098  , 215.25064  ],\n          [300.38098  , 215.25064  ]]],\n\n\n        [[[  8.075491 ,  42.0856   ],\n          [ 41.196518 ,  40.93258  ],\n          [ 76.71883  ,  40.905727 ],\n          ...,\n          [284.92307  , 224.45094  ],\n          [284.92307  , 224.45094  ],\n          [284.92307  , 224.45094  ]],\n\n         [[ 10.372277 ,  42.375607 ],\n          [ 45.847614 ,  41.158234 ],\n          [ 78.89222  ,  40.56739  ],\n          ...,\n          [288.715    , 224.7238   ],\n          [288.715    , 224.7238   ],\n          [288.715    , 224.7238   ]]]],\n\n\n\n       [[[[ 22.45641  ,  27.03476  ],\n          [ 56.4807   ,  24.500425 ],\n          [ 92.20207  ,  21.667145 ],\n          ...,\n          [283.0096   , 231.0032   ],\n          [283.0096   , 231.0032   ],\n          [283.0096   , 231.0032   ]],\n\n         [[ 26.78351  ,  25.68721  ],\n          [ 60.213966 ,  24.36884  ],\n          [ 95.66632  ,  20.407284 ],\n          ...,\n          [285.49026  , 231.82886  ],\n          [285.49026  , 231.82886  ],\n          [285.49026  , 231.82886  ]]],\n\n\n        [[[  6.9198008,  15.892034 ],\n          [ 73.216515 ,  18.012356 ],\n          [104.68652  ,  16.837017 ],\n          ...,\n          [ 96.47162  , 236.4423   ],\n          [ 96.47162  , 236.4423   ],\n          [ 96.47162  , 236.4423   ]],\n\n         [[  8.877122 ,  16.126942 ],\n          [ 76.83697  ,  19.159271 ],\n          [107.05367  ,  16.773533 ],\n          ...,\n          [ 99.94993  , 237.3631   ],\n          [ 99.94993  , 237.3631   ],\n          [ 99.94993  , 237.3631   ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 4, 'buffer_size': 200000, 'batch_size': 512, 'learning_starts': 2000, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7fd57832f8b0>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0001\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7fd578339ea0>', 'actor': 'Actor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): Identity()\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): Identity()\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=256, bias=True)\n    (7): Tanh()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7fd5d1a49540>'}
