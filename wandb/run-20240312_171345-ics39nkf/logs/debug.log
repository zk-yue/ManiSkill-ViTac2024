2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_setup.py:_flush():76] Configure stats pid to 10106
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/.config/wandb/settings
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/settings
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_init.py:_log_setup():524] Logging user logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240312_171345-ics39nkf/logs/debug.log
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_init.py:_log_setup():525] Logging internal logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240312_171345-ics39nkf/logs/debug-internal.log
2024-03-12 17:13:45,268 INFO    MainThread:10106 [wandb_init.py:init():564] calling init triggers
2024-03-12 17:13:45,269 INFO    MainThread:10106 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.0mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 2000, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4), 'batch_size': 128, 'learning_rate': 0.0003, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-12_17-13-39.481'}, 'train': {'total_timesteps': 500000, 'log_interval': 10, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 4, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': '7shape_1.5mm', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_sac.yaml', 'no_render': False}
2024-03-12 17:13:45,269 INFO    MainThread:10106 [wandb_init.py:init():614] starting backend
2024-03-12 17:13:45,269 INFO    MainThread:10106 [wandb_init.py:init():618] setting up manager
2024-03-12 17:13:45,270 INFO    MainThread:10106 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-12 17:13:45,279 INFO    MainThread:10106 [wandb_init.py:init():624] backend started and connected
2024-03-12 17:13:45,282 INFO    MainThread:10106 [wandb_init.py:init():716] updated telemetry
2024-03-12 17:13:45,287 INFO    MainThread:10106 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-12 17:13:46,739 INFO    MainThread:10106 [wandb_run.py:_on_init():2254] communicating current version
2024-03-12 17:13:48,747 INFO    MainThread:10106 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-12 17:13:48,748 INFO    MainThread:10106 [wandb_init.py:init():800] starting run threads in backend
2024-03-12 17:13:52,581 INFO    MainThread:10106 [wandb_run.py:_console_start():2233] atexit reg
2024-03-12 17:13:52,581 INFO    MainThread:10106 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-12 17:13:52,581 INFO    MainThread:10106 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-12 17:13:52,581 INFO    MainThread:10106 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-12 17:13:52,581 INFO    MainThread:10106 [wandb_init.py:init():841] run started, returning control to user process
2024-03-12 17:13:59,170 INFO    MainThread:10106 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-12_17-13-39.481/SAC_1, True
2024-03-12 17:13:59,198 INFO    MainThread:10106 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4)', 'start_time': 1710234832581770130, 'learning_rate': 0.0003, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-12_17-13-39.481', '_last_obs': "OrderedDict([('gt_offset', array([[ 2.9151413,  3.0810244, -2.1145103],\n       [ 2.014314 ,  0.4575935, -6.2540793],\n       [ 4.7026167,  4.364513 , -6.276261 ],\n       [ 4.47261  ,  1.1893901,  8.540018 ]], dtype=float32)), ('marker_flow', array([[[[[ 19.364721 ,  26.679274 ],\n          [ 54.455887 ,  26.156883 ],\n          [ 87.51437  ,  26.684652 ],\n          ...,\n          [279.31262  , 217.18839  ],\n          [279.31262  , 217.18839  ],\n          [279.31262  , 217.18839  ]],\n\n         [[ 22.747206 ,  26.453753 ],\n          [ 57.079197 ,  25.025415 ],\n          [ 90.41231  ,  26.417757 ],\n          ...,\n          [283.12515  , 216.42494  ],\n          [283.12515  , 216.42494  ],\n          [283.12515  , 216.42494  ]]],\n\n\n        [[[ 28.583313 ,  23.458187 ],\n          [ 61.02241  ,  19.828064 ],\n          [ 94.01132  ,  21.59764  ],\n          ...,\n          [303.6021   , 231.16714  ],\n          [303.6021   , 231.16714  ],\n          [303.6021   , 231.16714  ]],\n\n         [[ 32.714508 ,  22.450977 ],\n          [ 64.35983  ,  19.721584 ],\n          [ 97.43108  ,  20.127333 ],\n          ...,\n          [306.91666  , 230.12296  ],\n          [306.91666  , 230.12296  ],\n          [306.91666  , 230.12296  ]]]],\n\n\n\n       [[[[ 17.260866 ,  21.04037  ],\n          [ 51.15318  ,  14.86668  ],\n          [ 85.771034 ,  13.6364975],\n          ...,\n          [307.00647  , 218.77988  ],\n          [307.00647  , 218.77988  ],\n          [307.00647  , 218.77988  ]],\n\n         [[ 19.582771 ,  21.20372  ],\n          [ 53.345676 ,  14.734597 ],\n          [ 88.42762  ,  13.341407 ],\n          ...,\n          [310.35568  , 219.11327  ],\n          [310.35568  , 219.11327  ],\n          [310.35568  , 219.11327  ]]],\n\n\n        [[[ 26.017956 ,  15.567134 ],\n          [ 59.106846 ,  13.7535925],\n          [ 95.77067  ,  18.131674 ],\n          ...,\n          [290.6043   , 219.73178  ],\n          [290.6043   , 219.73178  ],\n          [290.6043   , 219.73178  ]],\n\n         [[ 29.5424   ,  16.21415  ],\n          [ 62.99786  ,  15.401308 ],\n          [ 99.03674  ,  17.921812 ],\n          ...,\n          [293.01105  , 219.54442  ],\n          [293.01105  , 219.54442  ],\n          [293.01105  , 219.54442  ]]]],\n\n\n\n       [[[[ 16.579964 ,  14.210328 ],\n          [ 47.152176 ,  17.785408 ],\n          [ 77.95527  ,  20.924309 ],\n          ...,\n          [125.34757  , 237.7315   ],\n          [125.34757  , 237.7315   ],\n          [125.34757  , 237.7315   ]],\n\n         [[ 19.330395 ,  14.321464 ],\n          [ 49.99155  ,  16.751873 ],\n          [ 80.66834  ,  21.152353 ],\n          ...,\n          [129.51141  , 237.9725   ],\n          [129.51141  , 237.9725   ],\n          [129.51141  , 237.9725   ]]],\n\n\n        [[[ 29.634197 ,  29.632202 ],\n          [ 64.918655 ,  31.401644 ],\n          [ 97.71012  ,  28.802237 ],\n          ...,\n          [296.09998  , 218.51868  ],\n          [296.09998  , 218.51868  ],\n          [296.09998  , 218.51868  ]],\n\n         [[ 32.768333 ,  28.781923 ],\n          [ 67.35515  ,  31.000843 ],\n          [101.607216 ,  29.042816 ],\n          ...,\n          [299.3287   , 218.2455   ],\n          [299.3287   , 218.2455   ],\n          [299.3287   , 218.2455   ]]]],\n\n\n\n       [[[[ 17.133078 ,  36.392593 ],\n          [ 49.541348 ,  36.495495 ],\n          [ 83.464195 ,  39.191174 ],\n          ...,\n          [305.56274  , 228.48901  ],\n          [305.56274  , 228.48901  ],\n          [305.56274  , 228.48901  ]],\n\n         [[ 20.142078 ,  36.044495 ],\n          [ 54.029984 ,  36.979706 ],\n          [ 86.58124  ,  38.701042 ],\n          ...,\n          [309.55243  , 229.02562  ],\n          [309.55243  , 229.02562  ],\n          [309.55243  , 229.02562  ]]],\n\n\n        [[[ 16.800215 ,  21.317568 ],\n          [ 49.790142 ,  18.649874 ],\n          [ 81.66881  ,  14.054114 ],\n          ...,\n          [299.09897  , 226.64429  ],\n          [299.09897  , 226.64429  ],\n          [299.09897  , 226.64429  ]],\n\n         [[ 18.553051 ,  20.558832 ],\n          [ 52.97     ,  17.805622 ],\n          [ 83.17977  ,  14.703117 ],\n          ...,\n          [302.97574  , 227.83093  ],\n          [302.97574  , 227.83093  ],\n          [302.97574  , 227.83093  ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 4, 'buffer_size': 200000, 'batch_size': 128, 'learning_starts': 2000, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f2bad307970>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7f2bad315cf0>', 'actor': 'Actor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7f2b8c96f850>'}
