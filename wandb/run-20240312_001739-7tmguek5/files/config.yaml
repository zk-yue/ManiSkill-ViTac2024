wandb_version: 1

env:
  desc: null
  value:
    max_action:
    - 4.0
    - 2.0
    - 2.0
    step_penalty: 1
    final_reward: 10
    max_steps: 100
    sensor_offset_x_range_len: 2.0
    sensor_offset_z_range_len: 2.0
    key_x_max_offset: 10
    key_y_max_offset: 0
    key_z_max_offset: 0
    normalize: false
    marker_random_noise: 0.5
    marker_lose_tracking_probability: 0.01
    marker_interval_range:
    - 1.95
    - 2.15
    marker_rotation_range: 0.1
    marker_translation_range:
    - 1
    - 1
    marker_pos_shift_range:
    - 0.1
    - 0.1
policy:
  desc: null
  value:
    buffer_size: 200000
    train_freq: 2
    gradient_steps: -1
    learning_starts: 2000
    target_policy_noise: 0.5
    target_noise_clip: 1
    action_noise: VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5
      0.5])), n_envs=1)
    batch_size: 128
    learning_rate: 0.0003
    policy_delay: 2
    policy_kwargs:
      net_arch:
        pi:
        - 256
        - 256
        qf:
        - 256
        - 256
      pointnet_in_dim: 4
      pointnet_out_dim: 32
      pointnet_batchnorm: false
      pointnet_layernorm: true
      zero_init_output: true
      use_relative_motion: true
    device: cuda:0
    seed: 0
    tensorboard_log: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/long_open_lock_2024-03-12_00-17-31.474
train:
  desc: null
  value:
    algorithm_name: TD3
    total_timesteps: 100000
    log_interval: 10
    checkpoint_every: 2000
    eval_freq: 2000
    n_eval: 50
    parallel: 1
    seed: 0
    device: cuda:0
    gpu: 0
    name: long_open_lock
    wandb_name: ManiSkill_ViTac
    emp: {}
cfg:
  desc: null
  value: configs/parameters/long_open_lock.yaml
no_render:
  desc: null
  value: false
_wandb:
  desc: null
  value:
    code_path: code/scripts/universal_training_script.py
    python_version: 3.10.0
    cli_version: 0.16.0
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    start_time: 1710173859.503399
    t:
      1:
      - 1
      - 5
      - 53
      - 55
      2:
      - 1
      - 5
      - 53
      - 55
      3:
      - 13
      - 16
      - 22
      - 23
      - 35
      4: 3.10.0
      5: 0.16.0
      8:
      - 5
      13: linux-x86_64
algo:
  desc: null
  value: TD3
policy_class:
  desc: null
  value: <class 'solutions.policies.TD3PolicyForLongOpenLockPointFlowEnv'>
device:
  desc: null
  value: cuda:0
verbose:
  desc: null
  value: 1
policy_kwargs:
  desc: null
  value: '{''net_arch'': {''pi'': [256, 256], ''qf'': [256, 256]}, ''pointnet_in_dim'':
    4, ''pointnet_out_dim'': 32, ''pointnet_batchnorm'': False, ''pointnet_layernorm'':
    True, ''zero_init_output'': True, ''use_relative_motion'': True}'
num_timesteps:
  desc: null
  value: 0
_total_timesteps:
  desc: null
  value: 100000
_num_timesteps_at_start:
  desc: null
  value: 0
seed:
  desc: null
  value: 0
action_noise:
  desc: null
  value: VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=1)
start_time:
  desc: null
  value: 1710173866406248939
learning_rate:
  desc: null
  value: 0.0003
tensorboard_log:
  desc: null
  value: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/long_open_lock_2024-03-12_00-17-31.474
_last_obs:
  desc: null
  value: "OrderedDict([('key1', array([[ 8.052606e+00, -3.160024e-03, -2.025721e-01]],\
    \ dtype=float32)), ('key2', array([[ 8.0524292e+00, -3.4841709e-03, -2.0362227e-01]],\
    \ dtype=float32)), ('key_side_pts', array([[[ 0.05326423, -0.00300482,  0.02097605],\n\
    \        [ 0.05326375,  0.00298445,  0.02098195],\n        [ 0.05326692, -0.00299506,\
    \  0.01097473],\n        [ 0.05326644,  0.00299421,  0.01098064]]], dtype=float32)),\
    \ ('lock1_pts', array([[[ 0.035,  0.004,  0.03 ],\n        [ 0.035, -0.004,  0.03\
    \ ],\n        [ 0.045,  0.004,  0.03 ],\n        [ 0.045, -0.004,  0.03 ]]], dtype=float32)),\
    \ ('lock2_pts', array([[[ 0.015, -0.004,  0.03 ],\n        [ 0.015,  0.004,  0.03\
    \ ],\n        [ 0.025,  0.004,  0.03 ],\n        [ 0.025, -0.004,  0.03 ]]], dtype=float32)),\
    \ ('lock_side_pts', array([[[ 0.052,  0.02 ,  0.04 ],\n        [ 0.052, -0.02\
    \ ,  0.04 ],\n        [ 0.052, -0.02 ,  0.   ],\n        [ 0.052,  0.02 ,  0.\
    \   ]]], dtype=float32)), ('marker_flow', array([[[[[ 35.24512 ,  15.085151],\n\
    \          [ 66.80242 ,  12.158628],\n          [102.04325 ,  10.606727],\n  \
    \        ...,\n          [309.26843 , 208.89813 ],\n          [309.26843 , 208.89813\
    \ ],\n          [309.26843 , 208.89813 ]],\n\n         [[ 35.053047,  13.743678],\n\
    \          [ 65.75351 ,  12.536385],\n          [101.41246 ,  11.175115],\n  \
    \        ...,\n          [309.5606  , 208.28506 ],\n          [309.5606  , 208.28506\
    \ ],\n          [309.5606  , 208.28506 ]]],\n\n\n        [[[ 33.487217,  22.595121],\n\
    \          [ 68.60346 ,  21.582956],\n          [ 99.86753 ,  21.87997 ],\n  \
    \        ...,\n          [302.7183  , 213.20157 ],\n          [302.7183  , 213.20157\
    \ ],\n          [302.7183  , 213.20157 ]],\n\n         [[ 34.446823,  23.025978],\n\
    \          [ 68.79479 ,  21.152632],\n          [ 99.92335 ,  22.624287],\n  \
    \        ...,\n          [302.1395  , 213.6961  ],\n          [302.1395  , 213.6961\
    \  ],\n          [302.1395  , 213.6961  ]]]]], dtype=float32)), ('relative_motion',\
    \ array([[0., 0., 0.]], dtype=float32))])"
_last_episode_starts:
  desc: null
  value: '[ True]'
_last_original_obs:
  desc: null
  value: None
_episode_num:
  desc: null
  value: 0
use_sde:
  desc: null
  value: 'False'
sde_sample_freq:
  desc: null
  value: -1
_current_progress_remaining:
  desc: null
  value: 1.0
_stats_window_size:
  desc: null
  value: 100
ep_info_buffer:
  desc: null
  value: deque([], maxlen=100)
ep_success_buffer:
  desc: null
  value: deque([], maxlen=100)
_n_updates:
  desc: null
  value: 0
_custom_logger:
  desc: null
  value: 'False'
_vec_normalize_env:
  desc: null
  value: None
observation_space:
  desc: null
  value: 'Dict(''key1'': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), ''key2'':
    Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), ''key_side_pts'': Box(-3.4028235e+38,
    3.4028235e+38, (4, 3), float32), ''lock1_pts'': Box(-3.4028235e+38, 3.4028235e+38,
    (4, 3), float32), ''lock2_pts'': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32),
    ''lock_side_pts'': Box(-3.4028235e+38, 3.4028235e+38, (4, 3), float32), ''marker_flow'':
    Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32), ''relative_motion'':
    Box(-3.4028235e+38, 3.4028235e+38, (3,), float32))'
action_space:
  desc: null
  value: Box(-1.0, 1.0, (3,), float32)
n_envs:
  desc: null
  value: 1
buffer_size:
  desc: null
  value: 200000
batch_size:
  desc: null
  value: 128
learning_starts:
  desc: null
  value: 2000
tau:
  desc: null
  value: 0.005
gamma:
  desc: null
  value: 0.99
gradient_steps:
  desc: null
  value: -1
optimize_memory_usage:
  desc: null
  value: 'False'
replay_buffer:
  desc: null
  value: <stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f34a7ae4670>
replay_buffer_class:
  desc: null
  value: <class 'stable_baselines3.common.buffers.DictReplayBuffer'>
replay_buffer_kwargs:
  desc: null
  value: '{}'
_episode_storage:
  desc: null
  value: None
train_freq:
  desc: null
  value: 'TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde_at_warmup:
  desc: null
  value: 'False'
policy_delay:
  desc: null
  value: 2
target_noise_clip:
  desc: null
  value: 1
target_policy_noise:
  desc: null
  value: 0.5
lr_schedule:
  desc: null
  value: <function constant_fn.<locals>.func at 0x7f34d19457e0>
actor:
  desc: null
  value: "LongOpenLockPointNetActor(\n  (features_extractor): FlattenExtractor(\n\
    \    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (mu): Sequential(\n \
    \   (0): Linear(in_features=1081, out_features=256, bias=True)\n    (1): ReLU()\n\
    \    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n\
    \    (4): Linear(in_features=256, out_features=3, bias=True)\n    (5): Tanh()\n\
    \  )\n  (point_net_feature_extractor): PointNetFeatureExtractor(\n    (pointnet_local_fea):\
    \ Sequential(\n      (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n     \
    \ (1): Identity()\n      (2): ReLU()\n      (3): Conv1d(64, 64, kernel_size=(1,),\
    \ stride=(1,))\n      (4): Identity()\n      (5): ReLU()\n    )\n    (pointnet_global_fea):\
    \ PointNetFeaNew(\n      (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n\
    \      (bn0): Identity()\n      (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n\
    \      (bn1): Identity()\n      (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n\
    \      (bn2): Identity()\n    )\n    (mlp_output): Sequential(\n      (0): Linear(in_features=512,\
    \ out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256,\
    \ out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256,\
    \ out_features=32, bias=True)\n    )\n  )\n  (mlp_policy): Sequential(\n    (0):\
    \ Linear(in_features=67, out_features=256, bias=True)\n    (1): LayerNorm((256,),\
    \ eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256,\
    \ out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n\
    \    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n\
    \    (7): Tanh()\n  )\n)"
actor_target:
  desc: null
  value: "LongOpenLockPointNetActor(\n  (features_extractor): FlattenExtractor(\n\
    \    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (mu): Sequential(\n \
    \   (0): Linear(in_features=1081, out_features=256, bias=True)\n    (1): ReLU()\n\
    \    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n\
    \    (4): Linear(in_features=256, out_features=3, bias=True)\n    (5): Tanh()\n\
    \  )\n  (point_net_feature_extractor): PointNetFeatureExtractor(\n    (pointnet_local_fea):\
    \ Sequential(\n      (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n     \
    \ (1): Identity()\n      (2): ReLU()\n      (3): Conv1d(64, 64, kernel_size=(1,),\
    \ stride=(1,))\n      (4): Identity()\n      (5): ReLU()\n    )\n    (pointnet_global_fea):\
    \ PointNetFeaNew(\n      (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n\
    \      (bn0): Identity()\n      (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n\
    \      (bn1): Identity()\n      (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n\
    \      (bn2): Identity()\n    )\n    (mlp_output): Sequential(\n      (0): Linear(in_features=512,\
    \ out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256,\
    \ out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256,\
    \ out_features=32, bias=True)\n    )\n  )\n  (mlp_policy): Sequential(\n    (0):\
    \ Linear(in_features=67, out_features=256, bias=True)\n    (1): LayerNorm((256,),\
    \ eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256,\
    \ out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n\
    \    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n\
    \    (7): Tanh()\n  )\n)"
critic:
  desc: null
  value: "CustomCritic(\n  (features_extractor): CriticFeatureExtractorForLongOpenLock()\n\
    \  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n)"
critic_target:
  desc: null
  value: "CustomCritic(\n  (features_extractor): CriticFeatureExtractorForLongOpenLock()\n\
    \  (qf0): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n  (qf1): Sequential(\n    (0): Linear(in_features=9, out_features=256, bias=True)\n\
    \    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n\
    \    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n\
    \  )\n)"
actor_batch_norm_stats:
  desc: null
  value: '[]'
critic_batch_norm_stats:
  desc: null
  value: '[]'
actor_batch_norm_stats_target:
  desc: null
  value: '[]'
critic_batch_norm_stats_target:
  desc: null
  value: '[]'
_logger:
  desc: null
  value: <stable_baselines3.common.logger.Logger object at 0x7f34a40c61a0>
