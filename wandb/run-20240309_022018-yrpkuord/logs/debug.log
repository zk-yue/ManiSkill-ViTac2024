2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_setup.py:_flush():76] Current SDK version is 0.16.0
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_setup.py:_flush():76] Configure stats pid to 28445
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/.config/wandb/settings
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_setup.py:_flush():76] Loading settings from /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/settings
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'scripts/train_sac.py', 'program_abspath': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py', 'program': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/train_sac.py'}
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_init.py:_log_setup():524] Logging user logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240309_022018-yrpkuord/logs/debug.log
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_init.py:_log_setup():525] Logging internal logs to /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/wandb/run-20240309_022018-yrpkuord/logs/debug-internal.log
2024-03-09 02:20:18,683 INFO    MainThread:28445 [wandb_init.py:init():564] calling init triggers
2024-03-09 02:20:18,684 INFO    MainThread:28445 [wandb_init.py:init():571] wandb.init called with sweep_config: {}
config: {'env': {'step_penalty': 1, 'final_reward': 10, 'max_action': array([2., 2., 4.]), 'max_steps': 8, 'z_step_size': 0.125, 'peg_hole_path_file': 'configs/peg_insertion/3shape_1.0mm.txt', 'peg_x_max_offset': 5.0, 'peg_y_max_offset': 5.0, 'peg_theta_max_offset': 10.0, 'marker_interval_range': [1.95, 2.15], 'marker_rotation_range': 0.1, 'marker_translation_range': [1, 1], 'marker_pos_shift_range': [0.1, 0.1], 'marker_random_noise': 0.5, 'marker_lose_tracking_probability': 0.01, 'normalize': False}, 'policy': {'buffer_size': 200000, 'train_freq': 2, 'gradient_steps': -1, 'learning_starts': 2000, 'action_noise': VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4), 'batch_size': 128, 'learning_rate': 0.0003, 'optimize_memory_usage': False, 'ent_coef': 'auto', 'target_update_interval': 1, 'target_entropy': 'auto', 'use_sde': False, 'sde_sample_freq': -1, 'use_sde_at_warmup': False, 'policy_kwargs': {'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}, 'device': 'cuda:0', 'seed': 0, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-09_02-20-13.444'}, 'train': {'total_timesteps': 500000, 'log_interval': 10, 'checkpoint_every': 2000, 'eval_freq': 2000, 'n_eval': 50, 'parallel': 4, 'seed': 0, 'device': 'cuda:0', 'gpu': 0, 'name': '7shape_1.5mm', 'wandb_name': 'ManiSkill_ViTac', 'emp': {}}, 'cfg': 'configs/parameters/peg_insertion_sac.yaml', 'no_render': False}
2024-03-09 02:20:18,684 INFO    MainThread:28445 [wandb_init.py:init():614] starting backend
2024-03-09 02:20:18,684 INFO    MainThread:28445 [wandb_init.py:init():618] setting up manager
2024-03-09 02:20:18,685 INFO    MainThread:28445 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-09 02:20:18,686 INFO    MainThread:28445 [wandb_init.py:init():624] backend started and connected
2024-03-09 02:20:18,689 INFO    MainThread:28445 [wandb_init.py:init():716] updated telemetry
2024-03-09 02:20:18,695 INFO    MainThread:28445 [wandb_init.py:init():749] communicating run to backend with 90.0 second timeout
2024-03-09 02:20:19,929 INFO    MainThread:28445 [wandb_run.py:_on_init():2254] communicating current version
2024-03-09 02:20:20,374 INFO    MainThread:28445 [wandb_run.py:_on_init():2263] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-09 02:20:20,374 INFO    MainThread:28445 [wandb_init.py:init():800] starting run threads in backend
2024-03-09 02:20:20,538 INFO    MainThread:28445 [wandb_run.py:_console_start():2233] atexit reg
2024-03-09 02:20:20,538 INFO    MainThread:28445 [wandb_run.py:_redirect():2088] redirect: wrap_raw
2024-03-09 02:20:20,538 INFO    MainThread:28445 [wandb_run.py:_redirect():2153] Wrapping output streams.
2024-03-09 02:20:20,538 INFO    MainThread:28445 [wandb_run.py:_redirect():2178] Redirects installed.
2024-03-09 02:20:20,539 INFO    MainThread:28445 [wandb_init.py:init():841] run started, returning control to user process
2024-03-09 02:20:27,224 INFO    MainThread:28445 [wandb_run.py:_tensorboard_callback():1498] tensorboard callback: /home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-09_02-20-13.444/SAC_1, True
2024-03-09 02:20:27,237 INFO    MainThread:28445 [wandb_run.py:_config_callback():1342] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'solutions.policies_sac.SACPolicyForPointFlowEnv'>", 'device': 'cuda:0', 'verbose': 1, 'policy_kwargs': "{'pointnet_in_dim': 4, 'pointnet_out_dim': 32, 'pointnet_batchnorm': False, 'pointnet_layernorm': True, 'zero_init_output': True, 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 500000, '_num_timesteps_at_start': 0, 'seed': 0, 'action_noise': 'VecNoise(BaseNoise=NormalActionNoise(mu=[0 0 0], sigma=[0.5 0.5 0.5])), n_envs=4)', 'start_time': 1709922020539412931, 'learning_rate': 0.0003, 'tensorboard_log': '/home/yuezk/yzk/ViTac/ManiSkill-ViTac2024/scripts/../training_log/7shape_1.5mm_2024-03-09_02-20-13.444', '_last_obs': "OrderedDict([('gt_offset', array([[ 4.8886337, -0.9113593, -9.807523 ],\n       [ 1.8076278, -1.3308296, -8.927696 ],\n       [ 4.061226 ,  4.179855 ,  7.3589883],\n       [ 1.193547 , -1.8537663,  7.5715756]], dtype=float32)), ('marker_flow', array([[[[[ 17.47424 ,  36.630257],\n          [ 50.344418,  37.844326],\n          [ 79.95064 ,  36.666794],\n          ...,\n          [305.97693 , 221.62592 ],\n          [305.97693 , 221.62592 ],\n          [305.97693 , 221.62592 ]],\n\n         [[ 20.51409 ,  35.70957 ],\n          [ 53.10634 ,  37.228985],\n          [ 84.035835,  36.422295],\n          ...,\n          [309.29025 , 222.03273 ],\n          [309.29025 , 222.03273 ],\n          [309.29025 , 222.03273 ]]],\n\n\n        [[[ 18.833546,  28.105686],\n          [ 52.207077,  26.856148],\n          [ 89.24398 ,  26.366121],\n          ...,\n          [285.7846  , 219.34729 ],\n          [285.7846  , 219.34729 ],\n          [285.7846  , 219.34729 ]],\n\n         [[ 22.099813,  28.648893],\n          [ 57.060925,  26.725094],\n          [ 91.45547 ,  25.817728],\n          ...,\n          [289.57526 , 220.0322  ],\n          [289.57526 , 220.0322  ],\n          [289.57526 , 220.0322  ]]]],\n\n\n\n       [[[[ 12.849272,  17.823324],\n          [ 46.367985,  16.334171],\n          [ 81.18643 ,  15.538415],\n          ...,\n          [283.9738  , 230.44028 ],\n          [283.9738  , 230.44028 ],\n          [283.9738  , 230.44028 ]],\n\n         [[ 15.416059,  17.550049],\n          [ 49.57191 ,  16.399187],\n          [ 84.357   ,  14.763846],\n          ...,\n          [286.8455  , 229.82515 ],\n          [286.8455  , 229.82515 ],\n          [286.8455  , 229.82515 ]]],\n\n\n        [[[ 32.142574,  27.559431],\n          [ 65.40003 ,  27.550207],\n          [ 98.200745,  27.636127],\n          ...,\n          [304.41382 , 221.05507 ],\n          [304.41382 , 221.05507 ],\n          [304.41382 , 221.05507 ]],\n\n         [[ 33.89806 ,  27.504501],\n          [ 66.84723 ,  27.73675 ],\n          [103.18595 ,  27.306461],\n          ...,\n          [307.75955 , 220.20596 ],\n          [307.75955 , 220.20596 ],\n          [307.75955 , 220.20596 ]]]],\n\n\n\n       [[[[ 41.94892 ,  34.38884 ],\n          [ 73.31229 ,  36.709743],\n          [106.38589 ,  35.47728 ],\n          ...,\n          [303.0347  , 227.59753 ],\n          [303.0347  , 227.59753 ],\n          [303.0347  , 227.59753 ]],\n\n         [[ 45.67438 ,  34.61409 ],\n          [ 76.16434 ,  36.936092],\n          [110.007126,  36.731533],\n          ...,\n          [306.82495 , 227.6098  ],\n          [306.82495 , 227.6098  ],\n          [306.82495 , 227.6098  ]]],\n\n\n        [[[ 10.287714,  16.18199 ],\n          [ 43.061398,  20.226404],\n          [ 75.938225,  21.177982],\n          ...,\n          [ 58.44366 , 236.48608 ],\n          [ 58.44366 , 236.48608 ],\n          [ 58.44366 , 236.48608 ]],\n\n         [[ 11.952934,  15.52696 ],\n          [ 45.515423,  20.53552 ],\n          [ 77.915344,  21.185175],\n          ...,\n          [ 60.963036, 237.25706 ],\n          [ 60.963036, 237.25706 ],\n          [ 60.963036, 237.25706 ]]]],\n\n\n\n       [[[[ 58.406715,  25.24132 ],\n          [ 94.29219 ,  28.078888],\n          [124.70153 ,  28.943947],\n          ...,\n          [306.67554 , 226.86206 ],\n          [306.67554 , 226.86206 ],\n          [306.67554 , 226.86206 ]],\n\n         [[ 61.35958 ,  26.121872],\n          [ 96.2998  ,  28.889078],\n          [127.565025,  28.576231],\n          ...,\n          [309.69034 , 227.96127 ],\n          [309.69034 , 227.96127 ],\n          [309.69034 , 227.96127 ]]],\n\n\n        [[[  8.481512,  39.059555],\n          [ 40.7739  ,  37.79471 ],\n          [ 76.011024,  39.028606],\n          ...,\n          [280.16168 , 230.04916 ],\n          [280.16168 , 230.04916 ],\n          [280.16168 , 230.04916 ]],\n\n         [[ 12.457571,  37.678143],\n          [ 43.549522,  37.27275 ],\n          [ 79.48452 ,  38.90662 ],\n          ...,\n          [283.66275 , 230.86063 ],\n          [283.66275 , 230.86063 ],\n          [283.66275 , 230.86063 ]]]]], dtype=float32))])", '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', '_vec_normalize_env': 'None', 'observation_space': "Dict('gt_offset': Box(-3.4028235e+38, 3.4028235e+38, (3,), float32), 'marker_flow': Box(-3.4028235e+38, 3.4028235e+38, (2, 2, 128, 2), float32))", 'action_space': 'Box(-1.0, 1.0, (3,), float32)', 'n_envs': 4, 'buffer_size': 200000, 'batch_size': 128, 'learning_starts': 2000, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': -1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.DictReplayBuffer object at 0x7f5cd8012890>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.DictReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=2, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -3.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x7f5cd7fe4790>', 'actor': 'CustomActor(\n  (features_extractor): FeatureExtractorWithPointNetEncoder(\n    (feature_extractor_net): PointNetFeatureExtractor(\n      (pointnet_local_fea): Sequential(\n        (0): Conv1d(4, 64, kernel_size=(1,), stride=(1,))\n        (1): Identity()\n        (2): ReLU()\n        (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (4): Identity()\n        (5): ReLU()\n      )\n      (pointnet_global_fea): PointNetFeaNew(\n        (conv0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))\n        (bn0): Identity()\n        (conv1): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (bn1): Identity()\n        (conv2): Conv1d(128, 512, kernel_size=(1,), stride=(1,))\n        (bn2): Identity()\n      )\n      (mlp_output): Sequential(\n        (0): Linear(in_features=512, out_features=256, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=256, out_features=256, bias=True)\n        (3): ReLU()\n        (4): Linear(in_features=256, out_features=32, bias=True)\n      )\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256, out_features=3, bias=True)\n  (log_std): Linear(in_features=256, out_features=3, bias=True)\n  (mlp_policy): Sequential(\n    (0): Linear(in_features=64, out_features=256, bias=True)\n    (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (2): ReLU()\n    (3): Linear(in_features=256, out_features=256, bias=True)\n    (4): LayerNorm((256,), eps=1e-05, elementwise_affine=True)\n    (5): ReLU()\n    (6): Linear(in_features=256, out_features=3, bias=True)\n    (7): Tanh()\n  )\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CriticFeatureExtractor()\n  (qf0): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=6, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x7f5cc03b6800>'}
